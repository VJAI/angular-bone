{"version":3,"sources":["webpack:///./demo/$_lazy_route_resource lazy namespace object","webpack:///./demo/demo.html","webpack:///./demo/demo.scss","webpack:///./demo/demo.ts","webpack:///./demo/main.ts","webpack:///./lib/base.ts","webpack:///./lib/bone.flex.ts","webpack:///./lib/bone.flexitem.ts","webpack:///./lib/bone.grid.ts","webpack:///./lib/bone.griditem.ts","webpack:///./lib/bone.ts","webpack:///./lib/breakpoint.ts","webpack:///./lib/watcher.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,6E;;;;;;;;;;;ACZA,8qFAA8qF,MAAM,8OAA8O,8BAA8B,QAAQ,iEAAiE,IAAI,QAAQ,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,gEAAgE,IAAI,QAAQ,MAAM,QAAQ,4sBAA4sB,gGAAgG,QAAQ,iEAAiE,IAAI,QAAQ,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,qFAAqF,IAAI,QAAQ,MAAM,QAAQ,uyBAAuyB,mIAAmI,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,iEAAiE,IAAI,QAAQ,QAAQ,gEAAgE,IAAI,QAAQ,MAAM,QAAQ,4fAA4f,6OAA6O,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,kEAAkE,IAAI,QAAQ,QAAQ,iEAAiE,IAAI,QAAQ,QAAQ,gEAAgE,IAAI,QAAQ,MAAM,QAAQ,u9BAAu9B,6OAA6O,UAAU,qKAAqK,YAAY,sBAAsB,IAAI,QAAQ,YAAY,sBAAsB,IAAI,QAAQ,YAAY,iEAAiE,IAAI,QAAQ,YAAY,sBAAsB,IAAI,QAAQ,QAAQ,QAAQ,UAAU,mIAAmI,UAAU,gEAAgE,IAAI,QAAQ,UAAU,gEAAgE,IAAI,QAAQ,UAAU,gEAAgE,IAAI,QAAQ,QAAQ,QAAQ,UAAU,oIAAoI,UAAU,gEAAgE,IAAI,QAAQ,UAAU,gEAAgE,IAAI,QAAQ,UAAU,gEAAgE,IAAI,QAAQ,QAAQ,QAAQ,UAAU,gEAAgE,IAAI,QAAQ,MAAM,QAAQ,0+LAA0+L,mBAAmB,kSAAkS,mBAAmB,wRAAwR,SAAS,UAAU,IAAI,00BAA00B,mBAAmB,k2F;;;;;;;;;;;ACA3jhB,8BAA8B,iBAAiB,EAAE,uBAAuB,gCAAgC,qBAAqB,yCAAyC,mCAAmC,iBAAiB,EAAE,2BAA2B,8BAA8B,EAAE,iCAAiC,4BAA4B,8CAA8C,8BAA8B,EAAE,qCAAqC,+BAA+B,wBAAwB,0BAA0B,EAAE,mCAAmC,sBAAsB,2BAA2B,EAAE,sBAAsB,gCAAgC,qBAAqB,EAAE,0BAA0B,0BAA0B,EAAE,6BAA6B,4BAA4B,6BAA6B,EAAE,6BAA6B,qCAAqC,oBAAoB,qBAAqB,2BAA2B,4BAA4B,4BAA4B,gCAAgC,EAAE,kCAAkC,oCAAoC,2BAA2B,+BAA+B,kCAAkC,wBAAwB,EAAE,wCAAwC,qCAAqC,oCAAoC,EAAE,6BAA6B,wBAAwB,eAAe,qBAAqB,mBAAmB,EAAE,qBAAqB,oCAAoC,EAAE,wBAAwB,yCAAyC,EAAE,6BAA6B,kCAAkC,2BAA2B,sBAAsB,EAAE,6CAA6C,sBAAsB,6BAA6B,0HAA0H,EAAE,4BAA4B,kCAAkC,EAAE,6BAA6B,kCAAkC,EAAE,2BAA2B,kCAAkC,EAAE,6BAA6B,kCAAkC,EAAE,2BAA2B,+BAA+B,EAAE,oFAAoF,sBAAsB,EAAE,mIAAmI,sBAAsB,EAAE,iEAAiE,qBAAqB,qBAAqB,EAAE,iHAAiH,sBAAsB,EAAE,0CAA0C,iCAAiC,wBAAwB,EAAE,uCAAuC,oBAAoB,EAAE,qBAAqB,oBAAoB,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSt4F;AACmC;AAC/B;AACc;AACS;AACH;AAO/C;IAeE,uBAA8C,OAAyB;QAAvE,iBAQC;QAR6C,YAAO,GAAP,OAAO,CAAkB;QAbhE,UAAK,GAAG,cAAc,CAAC;QAc5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAC,UAAsB;YAC/E,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,KAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,gCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,0DAAU,CAAC,MAAM,EAAE,0DAAU,CAAC,KAAK,EAAE,0DAAU,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;IACH,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC;IAC1D,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,+BAA+B,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACjF,CAAC;IAvCD;QADC,+DAAS,CAAC,OAAO,CAAC;kCACL,wDAAU;gDAAC;IAqBzB;QADC,kEAAY,CAAC,eAAe,EAAE,EAAE,CAAC;;;;iDAWjC;IApCG,aAAa;QALlB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;QAgBa,uEAAM,CAAC,6DAAgB,CAAC;yCAAkB,6DAAgB;OAfnE,aAAa,CA6ClB;IAAD,oBAAC;CAAA;AAYD;IAAA;IACA,CAAC;IADY,UAAU;QAVtB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,aAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oDAAU;aACX;YACD,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;AC9EvB;AAAA;AAAA;AAA2E;AACvC;AAEpC,gGAAsB,EAAE,CAAC,eAAe,CAAC,gDAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH0C;AAElD;AAQ7C;IAWE,kBAA0C,EAAc,EAAsC,OAAyB;QAAvH,iBAWC;QAXyC,OAAE,GAAF,EAAE,CAAY;QAAsC,YAAO,GAAP,OAAO,CAAkB;QARhH,qBAAgB,GAA8C,IAAI,0DAAY,EAA+B,CAAC;QAM3G,yBAAoB,GAAQ,IAAI,CAAC;QAGzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QACjD,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAC,UAAsB;YAC/E,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAClD,UAAU,EAAE,KAAI,CAAC,UAAU;gBAC3B,EAAE,EAAE,KAAI,CAAC,EAAE;gBACX,SAAS,EAAE,KAAI;aAChB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAW,GAAX;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,8BAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,eAAK;YACpC,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAW,GAAlB;QAAA,iBAgBC;QAfC,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC;QACT,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,eAAK;YAC/B,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAE5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;YACtE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAClE,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAMM,0BAAO,GAAd;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,2BAAQ,GAAf,UAAgB,GAAe;QAC7B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,EAAH,CAAG,CAAC,CAAC;IAC9F,CAAC;IAEM,4BAAS,GAAhB,UAAiB,GAAoB;QACnC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAa,CAAC,CAAC;IAC/B,CAAC;IAEM,0BAAO,GAAd,UAAe,GAAW;QACxB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC;IAEM,0BAAO,GAAd,UAAe,GAAW;QACxB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAC3D,CAAC;IAxED;QADC,4DAAM,CAAC,mBAAmB,CAAC;kCACH,0DAAY;sDAAgF;IAHjG,QAAQ;QAWf,uEAAM,CAAC,wDAAU,CAAC,GAA4B,uEAAM,CAAC,yDAAgB,CAAC;yCAArC,wDAAU,EAA+C,yDAAgB;OAXnG,QAAQ,CA4E7B;IAAD,eAAC;CAAA;AA5E6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACf;AAclC;IAA8B,4BAAQ;IAHtC;QAAA,qEAyKC;QApKS,cAAQ,GAAG,MAAM,CAAC;QA0BlB,gBAAU,GAAG,MAAM,CAAC;QA0BpB,gBAAU,GAAG,MAAM,CAAC;QA0BpB,gBAAU,GAAG,MAAM,CAAC;QA0BpB,gBAAU,GAAG,MAAM,CAAC;QA0BpB,mBAAa,GAA4B,IAAI,CAAC;;IAkCxD,CAAC;IAjKC,sBAAW,6BAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAmB,OAAe;YAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,MAAM,CAAC;QACpC,CAAC;;;OAJA;IAwBD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IAwBD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IAwBD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IAwBD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IAuBM,4BAAS,GAAhB;QACE,IAAM,SAAS,GAAG;YAChB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACtG,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACtH,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxF,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACzE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACrE,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAChI,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACrI,CAAC;QAEF,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,kBAAQ,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO;YACzD,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,SAAS,CAAC,aAAa;YAC5D,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;YAClD,IAAI,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,cAAc;YAC9D,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU;YACtD,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,oCAAiB,GAAxB;QACE,MAAM,CAAC,CAAC,SAAS,EAAE,gBAAgB,EAAE,WAAW,EAAE,iBAAiB,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;IACvG,CAAC;IAhKD;QADC,2DAAK,CAAC,OAAO,CAAC;;;2CAGd;IAOD;QADC,2DAAK,CAAC,iBAAiB,CAAC;;+CACA;IAGzB;QADC,2DAAK,CAAC,YAAY,CAAC;;0CACA;IAGpB;QADC,2DAAK,CAAC,uBAAuB,CAAC;;oDACD;IAG9B;QADC,2DAAK,CAAC,mBAAmB,CAAC;;gDACD;IAG1B;QADC,2DAAK,CAAC,qBAAqB,CAAC;;kDACD;IAK5B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,oBAAoB,CAAC;;iDACD;IAG3B;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACD;IAGtB;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,oBAAoB,CAAC;;iDACD;IAG3B;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACD;IAGtB;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,oBAAoB,CAAC;;iDACD;IAG3B;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACD;IAGtB;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,oBAAoB,CAAC;;iDACD;IAG3B;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACD;IAGtB;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAlInB,QAAQ;QAHpB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;SACpB,CAAC;OACW,QAAQ,CAsKpB;IAAD,eAAC;CAAA,CAtK6B,8CAAQ,GAsKrC;AAtKoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACf4B;AACf;AAalC;IAAkC,gCAAQ;IAH1C;QAAA,qEA8GC;QA9BS,mBAAa,GAAuB,IAAI,CAAC;;IA8BnD,CAAC;IA5BQ,gCAAS,GAAhB;QACE,IAAM,SAAS,GAAG;YAChB,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9F,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACxF,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACpG,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9F,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/F,CAAC;QAEF,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,kBAAQ,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS;YAC7D,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU;YACtD,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS;YACpD,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,wCAAiB,GAAxB;QACE,MAAM,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAvGD;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACD;IAGrB;QADC,2DAAK,CAAC,aAAa,CAAC;;8CACD;IAGpB;QADC,2DAAK,CAAC,eAAe,CAAC;;gDACD;IAGtB;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACQ;IAG9B;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACD;IAGrB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACF;IAGtB;QADC,2DAAK,CAAC,kBAAkB,CAAC;;kDACF;IAGxB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACO;IAGhC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACF;IAGtB;QADC,2DAAK,CAAC,kBAAkB,CAAC;;kDACF;IAGxB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACO;IAGhC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACF;IAGtB;QADC,2DAAK,CAAC,kBAAkB,CAAC;;kDACF;IAGxB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACO;IAGhC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACF;IAGtB;QADC,2DAAK,CAAC,kBAAkB,CAAC;;kDACF;IAGxB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACO;IAGhC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IA3EZ,YAAY;QAHxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;OACW,YAAY,CA2GxB;IAAD,mBAAC;CAAA,CA3GiC,8CAAQ,GA2GzC;AA3GwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdwB;AACf;AAmBlC;IAA8B,4BAAQ;IAHtC;QAAA,qEAkVC;QA7US,cAAQ,GAAG,MAAM,CAAC;QA4ClB,gBAAU,GAAG,MAAM,CAAC;QA4CpB,gBAAU,GAAG,MAAM,CAAC;QA4CpB,gBAAU,GAAG,MAAM,CAAC;QA4CpB,gBAAU,GAAG,MAAM,CAAC;QA4CpB,mBAAa,GAA4B,IAAI,CAAC;;IAiHxD,CAAC;IA1UC,sBAAW,6BAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAmB,OAAe;YAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,MAAM,CAAC;QACpC,CAAC;;;OAJA;IA0CD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IA0CD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IA0CD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IA0CD,sBAAW,+BAAS;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAqB,OAAe;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,IAAI,MAAM,CAAC;QACtC,CAAC;;;OAJA;IAyCM,4BAAS,GAAhB;QACE,IAAM,SAAS,GAAG;YAChB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACtG,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE;YACnC,gBAAgB,EAAE,IAAI,CAAC,OAAO,EAAE;YAChC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,EAAE;YAClC,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE;YACnC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE;YAChC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;YACtB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACpI,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACxH,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBAChG,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACrI,CAAC;QAEF,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,kBAAQ,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO;YACzD,IAAI,CAAC,aAAa,CAAC,mBAAmB,KAAK,SAAS,CAAC,mBAAmB;YACxE,IAAI,CAAC,aAAa,CAAC,gBAAgB,KAAK,SAAS,CAAC,gBAAgB;YAClE,IAAI,CAAC,aAAa,CAAC,iBAAiB,KAAK,SAAS,CAAC,iBAAiB;YACpE,IAAI,CAAC,aAAa,CAAC,eAAe,KAAK,SAAS,CAAC,eAAe;YAChE,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,YAAY;YAC1D,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO;YAChD,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,YAAY;YAC1D,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU;YACtD,IAAI,CAAC,aAAa,CAAC,cAAc,KAAK,SAAS,CAAC,cAAc;YAC9D,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,YAChD,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,oCAAiB,GAAxB;QACE,MAAM,CAAC;YACL,SAAS;YACT,uBAAuB;YACvB,oBAAoB;YACpB,qBAAqB;YACrB,mBAAmB;YACnB,gBAAgB;YAChB,UAAU;YACV,eAAe;YACf,aAAa;YACb,iBAAiB;YACjB,eAAe;SAChB,CAAC;IACJ,CAAC;IAEO,0BAAO,GAAf;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5F,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,0BAAO,GAAf;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5F,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,4BAAS,GAAjB,UAAkB,MAAgD;QAChE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAkB,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,YAAU,MAAM,WAAQ,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,eAAK,IAAI,cAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAI,KAAK,OAAI,CAAC,CAAC,CAAC,KAAK,EAAhD,CAAgD,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACzF,CAAC;QAED,MAAM,CAAS,MAAM,CAAC;IACxB,CAAC;IAEO,8BAAW,GAAnB;QACE,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1H,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAEO,8BAAW,GAAnB;QACE,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1H,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;IAClD,CAAC;IAEO,sCAAmB,GAA3B,UAA4B,IAAqB;QAC/C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAI,IAAI,OAAI,CAAC,CAAC,CAAS,IAAI,CAAC;IAC3D,CAAC;IAEO,2BAAQ,GAAhB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE5F,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,GAAG,EAAE,KAAK,IAAK,QAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,MAAI,OAAO,MAAG,CAAC,CAAC,CAAC,OAAO,WAAK,GAAG,MAAG,EAApD,CAAoD,CAAC,CAAC;QAC9H,CAAC;QAED,MAAM,CAAS,IAAI,CAAC;IACtB,CAAC;IAEO,yBAAM,GAAd;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAE9G,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAI,OAAO,OAAI,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAC,IAAI,cAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAI,CAAC,OAAI,CAAC,CAAC,CAAC,CAAC,EAApC,CAAoC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;IACH,CAAC;IAzUD;QADC,2DAAK,CAAC,OAAO,CAAC;;;2CAGd;IAOD;QADC,2DAAK,CAAC,YAAY,CAAC;;0CACkC;IAGtD;QADC,2DAAK,CAAC,YAAY,CAAC;;0CACkC;IAGtD;QADC,2DAAK,CAAC,YAAY,CAAC;;0CACuB;IAG3C;QADC,2DAAK,CAAC,iBAAiB,CAAC;;8CACQ;IAGjC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;8CACQ;IAGjC;QADC,2DAAK,CAAC,iBAAiB,CAAC;;8CACD;IAGxB;QADC,2DAAK,CAAC,WAAW,CAAC;;6CACsC;IAGzD;QADC,2DAAK,CAAC,qBAAqB,CAAC;;kDACD;IAG5B;QADC,2DAAK,CAAC,mBAAmB,CAAC;;gDACD;IAG1B;QADC,2DAAK,CAAC,uBAAuB,CAAC;;oDACD;IAG9B;QADC,2DAAK,CAAC,qBAAqB,CAAC;;kDACD;IAK5B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACsB;IAG7C;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACF;IAG1B;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACqC;IAG3D;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAG9B;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACsB;IAG7C;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACF;IAG1B;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACqC;IAG3D;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAG9B;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACsB;IAG7C;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACF;IAG1B;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACqC;IAG3D;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAG9B;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAK9B;QADC,2DAAK,CAAC,UAAU,CAAC;;;6CAGjB;IAOD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACiC;IAGxD;QADC,2DAAK,CAAC,eAAe,CAAC;;4CACsB;IAG7C;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACO;IAGnC;QADC,2DAAK,CAAC,oBAAoB,CAAC;;gDACF;IAG1B;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACqC;IAG3D;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IAG9B;QADC,2DAAK,CAAC,sBAAsB,CAAC;;kDACF;IAG5B;QADC,2DAAK,CAAC,0BAA0B,CAAC;;sDACF;IAGhC;QADC,2DAAK,CAAC,wBAAwB,CAAC;;oDACF;IA5NnB,QAAQ;QAHpB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;SACpB,CAAC;OACW,QAAQ,CA+UpB;IAAD,eAAC;CAAA,CA/U6B,8CAAQ,GA+UrC;AA/UoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB4B;AACf;AAalC;IAAkC,gCAAQ;IAH1C;QAAA,qEA6IC;QA7DS,mBAAa,GAAuB,IAAI,CAAC;;IA6DnD,CAAC;IA3DQ,gCAAS,GAAhB;QACE,IAAM,SAAS,GAAuB;YACpC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1G,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9F,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;YAC5B,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE;YACzB,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE;SACvB,CAAC;QAEF,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,kBAAQ,IAAI,QAAC,CAAC,QAAQ,EAAV,CAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAEpF,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,SAAS,CAAC,WAAW;YACjE,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,SAAS,CAAC,SAAS;YACpD,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;YAClD,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,SAAS,CAAC,UAAU;YACtD,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,wCAAiB,GAAxB;QACE,MAAM,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;IAChF,CAAC;IAEO,6BAAM,GAAd;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAEO,6BAAM,GAAd;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAEO,mCAAY,GAApB,UAAqB,KAA2D;QAC9E,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAS,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,UAAQ,KAAO,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAI,KAAK,CAAC,CAAC,CAAC,WAAM,KAAK,CAAC,CAAC,CAAG,CAAC;QACrC,CAAC;QAED,MAAM,CAAS,KAAK,IAAI,EAAE,CAAC;IAC7B,CAAC;IAEO,kCAAW,GAAnB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE5F,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAG,CAAC;QACpD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAtID;QADC,2DAAK,CAAC,YAAY,CAAC;;6CAC6C;IAGjE;QADC,2DAAK,CAAC,YAAY,CAAC;;6CAC6C;IAGjE;QADC,2DAAK,CAAC,aAAa,CAAC;;8CACsE;IAG3F;QADC,2DAAK,CAAC,gBAAgB,CAAC;;iDACD;IAGvB;QADC,2DAAK,CAAC,cAAc,CAAC;;+CACD;IAGrB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CAC4C;IAGnE;QADC,2DAAK,CAAC,eAAe,CAAC;;+CAC4C;IAGnE;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACqE;IAG7F;QADC,2DAAK,CAAC,mBAAmB,CAAC;;mDACF;IAGzB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CACF;IAGrB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CAC4C;IAGnE;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACqE;IAG7F;QADC,2DAAK,CAAC,mBAAmB,CAAC;;mDACF;IAGzB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CACF;IAGrB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CAC4C;IAGnE;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACqE;IAG7F;QADC,2DAAK,CAAC,mBAAmB,CAAC;;mDACF;IAGzB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IAGvB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CACF;IAGrB;QADC,2DAAK,CAAC,eAAe,CAAC;;+CAC4C;IAGnE;QADC,2DAAK,CAAC,gBAAgB,CAAC;;gDACqE;IAG7F;QADC,2DAAK,CAAC,mBAAmB,CAAC;;mDACF;IAGzB;QADC,2DAAK,CAAC,iBAAiB,CAAC;;iDACF;IA3EZ,YAAY;QAHxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;SACrB,CAAC;OACW,YAAY,CA0IxB;IAAD,mBAAC;CAAA,CA1IiC,8CAAQ,GA0IzC;AA1IwB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdgB;AACF;AACQ;AACR;AACQ;AACF;AAoB7C;IAAA;IACA,CAAC;IADY,UAAU;QAlBtB,8DAAQ,CAAC;YACR,OAAO,EAAE,EAAE;YACX,YAAY,EAAE;gBACZ,mDAAQ;gBACR,2DAAY;gBACZ,mDAAQ;gBACR,2DAAY;aACb;YACD,SAAS,EAAE;gBACT,yDAAgB;aACjB;YACD,OAAO,EAAE;gBACP,mDAAQ;gBACR,2DAAY;gBACZ,mDAAQ;gBACR,2DAAY;aACb;SACF,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;ACzBvB;AAAA;AAAA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,+BAAiB;IACjB,0BAAY;IACZ,2BAAa;IACb,0BAAY;IACZ,+BAAiB;AACnB,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN0D;AACjB;AAK1C;IAeE,0BAAoC,MAAc;QAAlD,iBAIC;QAJmC,WAAM,GAAN,MAAM,CAAQ;QAX1C,gBAAW,GAAoC,EAAE,CAAC;QAE1D,oEAAoE;QAC5D,sBAAiB,GAAoC,IAAI,GAAG,CAA6B;YAC/F,CAAC,sDAAU,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;YACjE,CAAC,sDAAU,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAC3D,CAAC,sDAAU,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAC5D,CAAC,sDAAU,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAC3D,CAAC,sDAAU,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;SAC7D,CAAC,CAAC;QAGD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,KAAoB,IAAK,YAAK,CAAC,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC,EAA9B,CAA8B,CAAC,CAAC;QACzF,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEM,0CAAe,GAAtB;QACE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAEM,gCAAK,GAAZ,UAAa,UAAoC;QAAjD,iBAGC;QAFC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,MAAM,CAAC,cAAM,YAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,EAAvD,CAAuD,CAAC;IACvE,CAAC;IAEO,iCAAM,GAAd;;YACE,GAAG,EAAuB,sBAAI,CAAC,iBAAiB;gBAA5C,IAAI,cAAc;gBACd,kCAAmC,EAAlC,iBAAS,EAAE,aAAK,CAAmB;gBAE1C,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClB,EAAE,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACxC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;wBAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC1B,CAAC;oBAED,KAAK,CAAC;gBACR,CAAC;aACF;;;;;;;;;;IACH,CAAC;IAEO,2CAAgB,GAAxB;QAAA,iBAIC;QAHC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACd,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,oBAAU,IAAI,iBAAU,CAAC,KAAI,CAAC,gBAAgB,CAAC,EAAjC,CAAiC,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IAjDU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QAgBa,uEAAM,CAAC,oDAAM,CAAC;yCAAiB,oDAAM;OAfvC,gBAAgB,CAkD5B;IAAD,uBAAC;CAAA;AAlD4B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./demo/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\"\\n     bon-g\\n     bon-g-cols=\\\"1\\\"\\n     bon-g-cols-md=\\\"25% 1fr\\\"\\n     bon-g-rows=\\\"12.5rem auto 1fr\\\"\\n     bon-g-rows-md=\\\"12.5rem 1fr\\\"\\n     bon-g-area=\\\"'h' 'a' 'm'\\\"\\n     bon-g-area-md=\\\"'h h' 'a m'\\\">\\n\\n  <header bon-gi bon-gi-area=\\\"h\\\">\\n    <div bon-f bon-f-align-items=\\\"center\\\">\\n      <div bon-fi bon-fi-grow=\\\"1\\\">\\n        <h1 class=\\\"logo\\\">angular<img src=\\\"assets/bone.png\\\" />bone</h1>\\n        <p>Provides structure to your angular apps using CSS3 Grid and Flex</p>\\n      </div>\\n      <a class=\\\"github\\\" bon-fi bon-fi-align=\\\"flex-start\\\" target=\\\"_blank\\\" href=\\\"https://github.com/vjai/angular-bone\\\">GITHUB</a>\\n    </div>\\n  </header>\\n\\n  <aside #aside [class.sticky]=\\\"isSticky\\\" bon-gi bon-gi-area=\\\"a\\\">\\n    <nav>\\n      <h4>Table of Contents</h4>\\n\\n      <ul>\\n        <li><a href=\\\"#intro\\\">Introduction</a></li>\\n        <li><a href=\\\"#install\\\">Installation</a></li>\\n        <li><a href=\\\"#flex-layouts\\\">Flex Layouts</a></li>\\n        <li><a href=\\\"#grid-layouts\\\">Grid Layouts</a></li>\\n        <li><a href=\\\"#mixing\\\">Mixing Grid and Flex</a></li>\\n        <li><a href=\\\"#breakpoint-change\\\">Breakpoint Change Handler</a></li>\\n        <li><a href=\\\"#service\\\">Media-Size Watcher Service</a></li>\\n        <li><a href=\\\"#api\\\">API</a></li>\\n        <li><a href=\\\"#license\\\">License</a></li>\\n        <li><a href=\\\"#github\\\">Github</a></li>\\n      </ul>\\n    </nav>\\n  </aside>\\n\\n  <main bon-gi bon-gi-area=\\\"m\\\">\\n    <h1>angular-bone</h1>\\n\\n    <h2 id=\\\"intro\\\">Introduction</h2>\\n\\n    <p>\\n      <a href=\\\"https://vjai.github.io/angular-bone/\\\">angular-bone</a> helps to build page layouts using CSS3 Grid and Flex concepts for your angular apps. It\\n      provides you a set of directives that helps to build responsive layouts in a declarative way.\\n    </p>\\n\\n    <p>\\n      As default, it follows <a target=\\\"_blank\\\" href=\\\"https://getbootstrap.com/docs/4.0/layout/grid/#grid-options\\\">bootstrap's breakpoint system</a> that allows you to configure layouts for 5 different screen sizes (Extra Small,\\n      Small - sm, Medium - md, Large - lg and Extra Large - xl). It also follows mobile-first approach.\\n    </p>\\n\\n    <p>\\n      The library also provides you a media-size watcher service that you can use anywhere in your application to listen to the breakpoint\\n      changes and act accordingly.\\n    </p>\\n\\n    <h2 id=\\\"install\\\">Installation</h2>\\n\\n    <p>\\n      You can install the library from npm.\\n    </p>\\n\\n<pre>\\nnpm install angular-bone --save\\n</pre>\\n\\n    <h2 id=\\\"flex-layouts\\\">Flex Layouts</h2>\\n\\n    <p>\\n      You can create flex layouts using two directives: <var>bon-f</var> and <var>bon-fi</var>.&nbsp;&nbsp;<var>bon-f</var> is used to\\n      configure the properties of a flex container and <var>bon-fi</var> is used to configure the properties of a flex item.\\n    </p>\\n\\n    <h3>Simple flex layout</h3>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-f</strong>&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-fi bon-fi-grow=\\\"2\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview</h4>\\n\\n    <div id=\\\"simple-flex-example\\\" class=\\\"canvas\\\" bon-f>\\n      <div class=\\\"green\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      <div class=\\\"yellow\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      <div class=\\\"pink\\\" bon-fi bon-fi-grow=\\\"2\\\"></div>\\n    </div>\\n\\n    <h3>Responsive flex layout</h3>\\n\\n    <p>\\n      You can configure the properties for a particular screen size by suffixing the media size abbreviation (sm, md, lg and xl) after the\\n      property name. If you don't specify any suffix then it's assumed for the extra small screen. If you want the same\\n      configuration for all the screen sizes then ignore the suffix.\\n    </p>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-f\\n     bon-f-direction=\\\"column\\\"\\n     bon-f-direction-md=\\\"row\\\"</strong>&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\" bon-fi-grow-md=\\\"2\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview (Resize the window to see the changes)</h4>\\n\\n    <div id=\\\"responsive-flex-example\\\" class=\\\"canvas\\\" bon-f bon-f-direction=\\\"column\\\" bon-f-direction-md=\\\"row\\\">\\n      <div class=\\\"green\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      <div class=\\\"yellow\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      <div class=\\\"pink\\\" bon-fi bon-fi-grow=\\\"1\\\" bon-fi-grow-md=\\\"2\\\"></div>\\n    </div>\\n\\n    <h2 id=\\\"grid-layouts\\\">Grid Layouts</h2>\\n\\n    <p>\\n      You can create awesome grid layouts using two directives: <var>bon-g</var> and <var>bon-gi</var>. <var>bon-g</var> is used to\\n      configure the properties of a grid container and <var>bon-gi</var> is used to configure the properties of a grid item.\\n    </p>\\n\\n    <h3>Simple grid layout</h3>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-g\\n     bon-g-cols=\\\"30% 1fr\\\"\\n     bon-g-rows=\\\"20% 1fr 10%\\\"\\n     bon-g-area=\\\"'a a' 'b c' 'd d'\\\"</strong>&gt;\\n  &lt;div class=\\\"purple\\\" <strong>bon-gi bon-gi-area=\\\"a\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-gi bon-gi-area=\\\"b\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-gi bon-gi-area=\\\"c\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-gi bon-gi-area=\\\"d\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview</h4>\\n\\n    <div id=\\\"simple-grid-example\\\" class=\\\"canvas\\\" bon-g bon-g-cols=\\\"30% 1fr\\\" bon-g-rows=\\\"20% 1fr 10%\\\" bon-g-area=\\\"'a a' 'b c' 'd d'\\\">\\n      <div class=\\\"purple\\\" bon-gi bon-gi-area=\\\"a\\\"></div>\\n      <div class=\\\"yellow\\\" bon-gi bon-gi-area=\\\"b\\\"></div>\\n      <div class=\\\"green\\\" bon-gi bon-gi-area=\\\"c\\\"></div>\\n      <div class=\\\"pink\\\" bon-gi bon-gi-area=\\\"d\\\"></div>\\n    </div>\\n\\n    <h3>Responsive grid layout</h3>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-g\\n     bon-g-cols=\\\"1\\\"\\n     bon-g-cols-md=\\\"30% 1fr\\\"\\n     bon-g-rows=\\\"20% 30% 1fr 10%\\\"\\n     bon-g-rows-md=\\\"20% 1fr 10%\\\"\\n     bon-g-area=\\\"'a' 'b' 'c' 'd'\\\"\\n     bon-g-area-md=\\\"'a a' 'b c' 'd d'\\\"</strong>&gt;\\n  &lt;div class=\\\"purple\\\" <strong>bon-gi bon-gi-area=\\\"a\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-gi bon-gi-area=\\\"b\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-gi bon-gi-area=\\\"c\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-gi bon-gi-area=\\\"d\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview (Resize the window to see the changes)</h4>\\n\\n    <div id=\\\"responsive-grid-example\\\" class=\\\"canvas\\\"\\n         bon-g\\n         bon-g-cols=\\\"1\\\"\\n         bon-g-cols-md=\\\"30% 1fr\\\"\\n         bon-g-rows=\\\"20% 30% 1fr 10%\\\"\\n         bon-g-rows-md=\\\"20% 1fr 10%\\\"\\n         bon-g-area=\\\"'a' 'b' 'c' 'd'\\\"\\n         bon-g-area-md=\\\"'a a' 'b c' 'd d'\\\">\\n      <div class=\\\"purple\\\" bon-gi bon-gi-area=\\\"a\\\"></div>\\n      <div class=\\\"yellow\\\" bon-gi bon-gi-area=\\\"b\\\"></div>\\n      <div class=\\\"green\\\" bon-gi bon-gi-area=\\\"c\\\"></div>\\n      <div class=\\\"pink\\\" bon-gi bon-gi-area=\\\"d\\\"></div>\\n    </div>\\n\\n    <h2 id=\\\"mixing\\\">Mixing grid and flex</h2>\\n\\n    <p>\\n      You can mix both the grid and flex directives together. A grid item can be a flex container and a flex item can be a grid container.\\n      Usually developers use grid for macro level arrangement and flex for micro level arrangement.\\n    </p>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-g\\n     bon-g-cols=\\\"1\\\"\\n     bon-g-cols-md=\\\"30% 1fr\\\"\\n     bon-g-rows=\\\"20% 30% 1fr 10%\\\"\\n     bon-g-rows-md=\\\"20% 1fr 10%\\\"\\n     bon-g-area=\\\"'a' 'b' 'c' 'd'\\\"\\n     bon-g-area-md=\\\"'a a' 'b c' 'd d'\\\"</strong>&gt;\\n\\n  &lt;div class=\\\"purple\\\"\\n       <strong>bon-gi\\n       bon-gi-area=\\\"a\\\"\\n       bon-f\\n       bon-f-direction=\\\"row\\\"\\n       bon-f-align-items=\\\"center\\\"</strong>&gt;\\n      &lt;div class=\\\"grey\\\"&gt;&lt;/div&gt;\\n      &lt;div class=\\\"grey\\\"&gt;&lt;/div&gt;\\n      &lt;div class=\\\"empty\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n      &lt;div class=\\\"grey\\\"&gt;&lt;/div&gt;\\n  &lt;/div&gt;\\n\\n  &lt;div class=\\\"yellow\\\"\\n       <strong>bon-gi\\n       bon-gi-area=\\\"b\\\"\\n       bon-f\\n       bon-f-direction=\\\"column\\\"</strong>&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;/div&gt;\\n\\n  &lt;div class=\\\"green\\\"\\n      <strong>bon-gi\\n       bon-gi-area=\\\"c\\\"\\n       bon-f\\n       bon-f-direction-md=\\\"column\\\"</strong>&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"2\\\"</strong>&gt;&lt;/div&gt;\\n    &lt;div class=\\\"grey\\\" <strong>bon-fi bon-fi-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;/div&gt;\\n\\n  &lt;div class=\\\"pink\\\" <strong>bon-gi bon-gi-area=\\\"d\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview</h4>\\n\\n    <div id=\\\"mixing-grid-and-flex-example\\\" class=\\\"canvas\\\"\\n         bon-g\\n         bon-g-cols=\\\"1\\\"\\n         bon-g-cols-md=\\\"30% 1fr\\\"\\n         bon-g-rows=\\\"20% 30% 1fr 10%\\\"\\n         bon-g-rows-md=\\\"20% 1fr 10%\\\"\\n         bon-g-area=\\\"'a' 'b' 'c' 'd'\\\"\\n         bon-g-area-md=\\\"'a a' 'b c' 'd d'\\\">\\n\\n      <div class=\\\"purple\\\"\\n           bon-gi\\n           bon-gi-area=\\\"a\\\"\\n           bon-f\\n           bon-f-direction=\\\"row\\\"\\n           bon-f-align-items=\\\"center\\\">\\n        <div class=\\\"grey\\\"></div>\\n        <div class=\\\"grey\\\"></div>\\n        <div class=\\\"empty\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n        <div class=\\\"grey\\\"></div>\\n      </div>\\n\\n      <div class=\\\"yellow\\\"\\n           bon-gi\\n           bon-gi-area=\\\"b\\\"\\n           bon-f\\n           bon-f-direction=\\\"column\\\">\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      </div>\\n\\n      <div class=\\\"green\\\" bon-gi bon-gi-area=\\\"c\\\" bon-f bon-f-direction-md=\\\"column\\\">\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"2\\\"></div>\\n        <div class=\\\"grey\\\" bon-fi bon-fi-grow=\\\"1\\\"></div>\\n      </div>\\n\\n      <div class=\\\"pink\\\" bon-gi bon-gi-area=\\\"d\\\"></div>\\n    </div>\\n\\n    <h2 id=\\\"breakpoint-change\\\">Breakpoint change handler</h2>\\n\\n    <p>\\n      Lorem ipsum dolor....\\n    </p>\\n\\n    <h2 id=\\\"service\\\">Media-Size Watcher Service</h2>\\n\\n    <p>\\n      The library also provides you a service to watch for breakpoint changes anywhere and act accordingly.\\n    </p>\\n\\n<pre>\\nTODO\\n</pre>\\n\\n    <h2 id=\\\"api\\\">API</h2>\\n\\n    <h3>Flex Directives</h3>\\n\\n    <p>\\n      You can use <var>bon-f</var> and <var>bon-fi</var> directives to do flex layout system for your pages.\\n    </p>\\n\\n    <p>\\n      Below tables lists the properties of both the directives. If default is not provided then it's assumed to be the\\n      browser's default.\\n    </p>\\n\\n    <table>\\n      <caption>Properties of flex container directive <var>bon-f</var></caption>\\n      <thead>\\n      <tr>\\n        <th style=\\\"width: 25%\\\">Property Name</th>\\n        <th style=\\\"width: 10%\\\">Type</th>\\n        <th style=\\\"width: 10%\\\">Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>bon-f</td>\\n        <td>string</td>\\n        <td>flex</td>\\n        <td>The display type of the container. The value can be either \\\"flex\\\", \\\"inline-flex\\\" or \\\"none\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-f-direction</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>The flex direction. It can be one of these values: \\\"row\\\", \\\"row-reverse\\\", \\\"column\\\" or \\\"column-reverse\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-f-wrap</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Controls the wrapping behavior of flex items. It can be \\\"nowrap\\\", \\\"wrap\\\" or \\\"wrap-reverse\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-f-justify-content</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Defines the alignment along the main axis. Some of the possible values are: \\\"flex-start\\\", \\\"flex-end\\\", \\\"center\\\" etc.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-f-align-items</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Defines the default behaviour for how flex items are laid out along the cross axis. Some of the possible values are: \\\"flex-start\\\", \\\"flex-end\\\", \\\"center\\\" etc.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-f-align-content</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Defines the alignment of individual items within the main-axis. Some of the possible values are: \\\"flex-start\\\", \\\"flex-end\\\", \\\"center\\\" etc.</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <p>\\n      The above properties repeats for other screen sizes with the respective suffix. For example, in case of small screen\\n      the properties are: <var>bon-f-sm</var>, <var>bon-f-direction-sm</var> and so on.\\n    </p>\\n\\n    <table>\\n      <caption>Properties of flex item directive <var>bon-fi</var></caption>\\n      <thead>\\n        <tr>\\n          <th style=\\\"width: 25%\\\">Property Name</th>\\n          <th style=\\\"width: 10%\\\">Type</th>\\n          <th style=\\\"width: 10%\\\">Default</th>\\n          <th>Description</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>bon-fi-order</td>\\n        <td>number</td>\\n        <td></td>\\n        <td>Controls the order in which they appear in the flex container.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-fi-grow</td>\\n        <td>number</td>\\n        <td></td>\\n        <td>Defines the ability for a flex item to grow.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-fi-shrink</td>\\n        <td>number</td>\\n        <td></td>\\n        <td>Defines the ability for a flex item to shrink.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-fi-basis</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Defines the default size of an element before the remaining space is distributed.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-fi-align</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>The default alignment of the item.</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <p>\\n      The above properties repeats for other screen sizes with the respective suffix.\\n    </p>\\n\\n    <table>\\n      <caption>Properties of grid directive <var>bon-g</var></caption>\\n      <thead>\\n      <tr>\\n        <th style=\\\"width: 25%\\\">Property Name</th>\\n        <th style=\\\"width: 10%\\\">Type</th>\\n        <th style=\\\"width: 10%\\\">Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>bon-g</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>The display type of grid container. The value can be either \\\"grid\\\", \\\"inline-grid\\\" or \\\"none\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-cols</td>\\n        <td>number | Array&lt;number | string&gt; | string</td>\\n        <td></td>\\n        <td>The columns configuration of grid. Passing number create that many equal size columns. You can also\\n        pass an array of column values or a string.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-rows</td>\\n        <td>number | Array&lt;number | string&gt; | string</td>\\n        <td></td>\\n        <td>The columns configuration of grid. Passing number create that many equal size rows. You can also\\n          pass an array of column values or a string.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-area</td>\\n        <td>Array&lt;Array&lt;string&gt;&gt; | string</td>\\n        <td></td>\\n        <td>The area configuration. You can pass as an array of arrays or just a string.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-auto-cols</td>\\n        <td>number | string</td>\\n        <td></td>\\n        <td>The default size of auto-generated grid columns.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-auto-rows</td>\\n        <td>number | string</td>\\n        <td></td>\\n        <td>The default size of auto-generated grid rows.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-auto-flow</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Controls how auto-placed items get inserted in the grid. It's an enumeration and the values are \\\"row\\\", \\\"column\\\", \\\"row dense\\\" and \\\"column dense\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-gap</td>\\n        <td>number | Array&lt;number | string&gt; | string</td>\\n        <td></td>\\n        <td>The gap between rows and columns.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-justify-items</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of grid items along the row axis. Some of the possible values are \\\"start\\\", \\\"end\\\", \\\"center\\\" and \\\"stretch\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-align-items</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of grid items along the column axis. Some of the possible values are \\\"start\\\", \\\"end\\\", \\\"center\\\" and \\\"stretch\\\".</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-justify-content</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of grid along the row axis.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-g-align-content</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of grid along the column axis.</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <table>\\n      <caption>Properties of grid directive <var>bon-g</var></caption>\\n      <thead>\\n      <tr>\\n        <th style=\\\"width: 25%\\\">Property Name</th>\\n        <th style=\\\"width: 10%\\\">Type</th>\\n        <th style=\\\"width: 10%\\\">Default</th>\\n        <th>Description</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr>\\n        <td>bon-gi-col</td>\\n        <td>number | [number | string, number | string] | string</td>\\n        <td></td>\\n        <td>Passing a number will specify the spanning of the column. You can also specify the position as an array or string.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-gi-row</td>\\n        <td>number | [number | string, number | string] | string</td>\\n        <td></td>\\n        <td>Passing a number will specify the spanning of the row. You can also specify the position as an array or string.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-gi-area</td>\\n        <td>[number | string, number | string, number | string, number | string] | string</td>\\n        <td></td>\\n        <td>The area of the item.</td>\\n      </tr>\\n      <tr>\\n        <td>bon-gi-justify</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of a grid item inside a cell along the inline (row).</td>\\n      </tr>\\n      <tr>\\n        <td>bon-gi-align</td>\\n        <td>string</td>\\n        <td></td>\\n        <td>Specifies the alignment of a grid item inside a cell along the inline (column).</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <h2 id=\\\"license\\\">License</h2>\\n\\n    <p>\\n      MIT\\n    </p>\\n\\n    <h2 id=\\\"github\\\">Github</h2>\\n\\n    <p>\\n      The repo is hosted in Github <a target=\\\"_blank\\\" href=\\\"https://github.com/VJAI/angular-bone\\\">https://github.com/VJAI/angular-bone</a>. Please give a star if you like and feel\\n      free to clone and raise pull requests.\\n    </p>\\n  </main>\\n</div>\\n\"","module.exports = \".container {\\n  height: 100%; }\\n  .container header {\\n    background-color: #00bfff;\\n    color: #efefef;\\n    box-shadow: 0 3px 3px -3px #949a9c;\\n    text-shadow: 0 1px 0 #949a9c;\\n    z-index: 1; }\\n  .container header div {\\n      margin: 0 1rem 0 1rem; }\\n  .container header div .logo {\\n        font-size: 3.5rem;\\n        font-family: 'Fredoka One', cursive;\\n        letter-spacing: 1px; }\\n  .container header div .logo img {\\n          position: relative;\\n          bottom: 5px;\\n          margin: 0 5px; }\\n  .container header div .github {\\n        color: #fff;\\n        margin-top: 1rem; }\\n  .container aside {\\n    background-color: #f2f4f4;\\n    overflow: auto; }\\n  .container aside nav {\\n      padding-top: 20px; }\\n  .container aside nav h4 {\\n        font-size: 1.5rem;\\n        text-align: center; }\\n  .container aside nav ul {\\n        text-transform: capitalize;\\n        margin: 0;\\n        padding: 0;\\n        list-style: none;\\n        font-size: 1.2rem;\\n        font-weight: bold;\\n        letter-spacing: 0.5px; }\\n  .container aside nav ul li a {\\n          padding: 0.5rem 0.75rem;\\n          display: block;\\n          text-align: center;\\n          transition: all 0.25s;\\n          color: #666; }\\n  .container aside nav ul li a:hover {\\n            background-color: #fff;\\n            text-decoration: none; }\\n  .container aside.sticky {\\n      position: fixed;\\n      top: 0;\\n      height: 100%;\\n      width: 25%; }\\n  .container main {\\n    padding: 2rem 4rem 10rem 4rem; }\\n  .container main h1 {\\n      border-bottom: solid 1px #eaefef; }\\n  .container main .canvas {\\n      background-color: #f2f2f2;\\n      border-radius: 5px;\\n      padding: 10px; }\\n  .container main .canvas div:not(.empty) {\\n        margin: 5px;\\n        border-radius: 5px;\\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12); }\\n  .container main .green {\\n      background-color: #c7e853; }\\n  .container main .yellow {\\n      background-color: #f2ef37; }\\n  .container main .pink {\\n      background-color: #ff2873; }\\n  .container main .purple {\\n      background-color: #a07df2; }\\n  .container main .grey {\\n      background-color: #eee; }\\n  .container main #simple-flex-example, .container main #responsive-flex-example {\\n      height: 300px; }\\n  .container main #simple-grid-example, .container main #responsive-grid-example, .container main #mixing-grid-and-flex-example {\\n      height: 500px; }\\n  .container main #mixing-grid-and-flex-example .purple .grey {\\n      width: 100px;\\n      height: 20px; }\\n  .container main #mixing-grid-and-flex-example .yellow, .container main #mixing-grid-and-flex-example .green {\\n      padding: 20px; }\\n  @media screen and (max-width: 575px) {\\n  .container header div .logo {\\n    font-size: 2.2rem; }\\n    .container header div .logo img {\\n      width: 20px; }\\n  .container main {\\n    padding: 2rem; } }\\n\"","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  NgModule,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'zone.js/dist/zone';\nimport { BoneModule } from '../lib/bone';\nimport { MediaSizeWatcher } from '../lib/watcher';\nimport { Breakpoint } from \"../lib/breakpoint\";\n\n@Component({\n  selector: 'demo-root',\n  templateUrl: './demo.html',\n  styleUrls: ['./demo.scss']\n})\nclass DemoComponent implements AfterViewInit, OnDestroy {\n\n  public title = 'angular-bone';\n\n  @ViewChild('aside')\n  public aside: ElementRef;\n\n  public isSticky: boolean;\n\n  private initialOffset: number;\n\n  private mediaWatcherUnSubscribeFunction: () => void;\n\n  private breakpoint: Breakpoint;\n\n  constructor(@Inject(MediaSizeWatcher) private watcher: MediaSizeWatcher) {\n    this.breakpoint = this.watcher.getCurrentMedia();\n    this.setAside();\n\n    this.mediaWatcherUnSubscribeFunction = this.watcher.watch((breakpoint: Breakpoint) => {\n      this.breakpoint = breakpoint;\n      this.setAside();\n    });\n  }\n\n  @HostListener('window:scroll', [])\n  setAside() {\n    if (!this.aside) {\n      return;\n    }\n\n    if ([Breakpoint.Medium, Breakpoint.Large, Breakpoint.ExtraLarge].indexOf(this.breakpoint) > -1) {\n      this.isSticky = window.pageYOffset >= this.initialOffset;\n    } else {\n      this.isSticky = false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.initialOffset = this.aside.nativeElement.offsetTop;\n  }\n\n  ngOnDestroy() {\n    this.mediaWatcherUnSubscribeFunction && this.mediaWatcherUnSubscribeFunction();\n  }\n}\n\n@NgModule({\n  declarations: [\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BoneModule\n  ],\n  bootstrap: [DemoComponent]\n})\nexport class DemoModule {\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { DemoModule } from './demo';\n\nplatformBrowserDynamic().bootstrapModule(DemoModule);\n","import { ElementRef, EventEmitter, Inject, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Breakpoint } from './breakpoint';\nimport { MediaSizeWatcher } from './watcher';\n\nexport interface BreakpointChangeHandlerArgs {\n  breakpoint: Breakpoint;\n  el: ElementRef;\n  directive: any;\n}\n\nexport abstract class BoneBase implements OnChanges, OnDestroy {\n\n  @Output('breakpoint-change')\n  public breakpointChange: EventEmitter<BreakpointChangeHandlerArgs> = new EventEmitter<BreakpointChangeHandlerArgs>();\n\n  protected breakpoint: Breakpoint;\n\n  protected mediaWatcherUnSubscribeFunction: () => void;\n\n  protected currentAppliedStyles: any = null;\n\n  constructor(@Inject(ElementRef) protected el: ElementRef, @Inject(MediaSizeWatcher) protected watcher: MediaSizeWatcher) {\n    this.breakpoint = this.watcher.getCurrentMedia();\n    this.mediaWatcherUnSubscribeFunction = this.watcher.watch((breakpoint: Breakpoint) => {\n      this.breakpoint = breakpoint;\n      this.applyLayout();\n      this.breakpointChange && this.breakpointChange.emit({\n        breakpoint: this.breakpoint,\n        el: this.el,\n        directive: this\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.applyLayout();\n  }\n\n  ngOnDestroy() {\n    this.mediaWatcherUnSubscribeFunction();\n    this.getStylePropNames().forEach(style => {\n      this.el.nativeElement.style.removeProperty(style);\n    });\n  }\n\n  public applyLayout(): void {\n    const styles = this.getStyles();\n\n    if (!styles) {\n      return;\n    }\n\n    Object.keys(styles).forEach(style => {\n      const value = styles[style];\n\n      if (value) {\n        this.el.nativeElement.style.setProperty(this.toKebab(style), value);\n      } else {\n        this.el.nativeElement.style.removeProperty(this.toCamel(style));\n      }\n    });\n  }\n\n  public abstract getStyles(): { [key: string]: any };\n\n  public abstract getStylePropNames(): Array<string>;\n\n  public destroy(): void {\n    this.ngOnDestroy();\n  }\n\n  public getValue(arr: Array<any>): any {\n    return arr.splice(['xl', 'lg', 'md', 'sm', 'xs'].indexOf(this.breakpoint)).find(val => val);\n  }\n\n  public isNumeric(num: number | string): boolean {\n    return !isNaN(num as number);\n  }\n\n  public toKebab(str: string): string {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  public toCamel(str: string): string {\n    return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface FlexContainerStyleProps {\n  display: string;\n  flexDirection: string;\n  flexWrap: string;\n  justifyContent: string;\n  alignItems: string;\n  alignContent: string;\n}\n\n@Directive({\n  selector: '[bon-f]'\n})\nexport class BoneFlex extends BoneBase {\n\n  private _display = 'flex';\n\n  @Input('bon-f')\n  public get display(): string {\n    return this._display;\n  }\n\n  public set display(display: string) {\n    this._display = display || 'flex';\n  }\n\n  @Input('bon-f-direction')\n  public direction: string;\n\n  @Input('bon-f-wrap')\n  public wrap: string;\n\n  @Input('bon-f-justify-content')\n  public justifyContent: string;\n\n  @Input('bon-f-align-items')\n  public alignItems: string;\n\n  @Input('bon-f-align-content')\n  public alignContent: string;\n\n  private _displaySm = 'flex';\n\n  @Input('bon-f-sm')\n  public get displaySm(): string {\n    return this._displaySm;\n  }\n\n  public set displaySm(display: string) {\n    this._displaySm = display || 'flex';\n  }\n\n  @Input('bon-f-direction-sm')\n  public directionSm: string;\n\n  @Input('bon-f-wrap-sm')\n  public wrapSm: string;\n\n  @Input('bon-f-justify-content-sm')\n  public justifyContentSm: string;\n\n  @Input('bon-f-align-items-sm')\n  public alignItemsSm: string;\n\n  @Input('bon-f-align-content-sm')\n  public alignContentSm: string;\n\n  private _displayMd = 'flex';\n\n  @Input('bon-f-md')\n  public get displayMd(): string {\n    return this._displayMd;\n  }\n\n  public set displayMd(display: string) {\n    this._displayMd = display || 'flex';\n  }\n\n  @Input('bon-f-direction-md')\n  public directionMd: string;\n\n  @Input('bon-f-wrap-md')\n  public wrapMd: string;\n\n  @Input('bon-f-justify-content-md')\n  public justifyContentMd: string;\n\n  @Input('bon-f-align-items-md')\n  public alignItemsMd: string;\n\n  @Input('bon-f-align-content-md')\n  public alignContentMd: string;\n\n  private _displayLg = 'flex';\n\n  @Input('bon-f-lg')\n  public get displayLg(): string {\n    return this._displayLg;\n  }\n\n  public set displayLg(display: string) {\n    this._displayLg = display || 'flex';\n  }\n\n  @Input('bon-f-direction-lg')\n  public directionLg: string;\n\n  @Input('bon-f-wrap-lg')\n  public wrapLg: string;\n\n  @Input('bon-f-justify-content-lg')\n  public justifyContentLg: string;\n\n  @Input('bon-f-align-items-lg')\n  public alignItemsLg: string;\n\n  @Input('bon-f-align-content-lg')\n  public alignContentLg: string;\n\n  private _displayXl = 'flex';\n\n  @Input('bon-f-xl')\n  public get displayXl(): string {\n    return this._displayXl;\n  }\n\n  public set displayXl(display: string) {\n    this._displayXl = display || 'flex';\n  }\n\n  @Input('bon-f-direction-xl')\n  public directionXl: string;\n\n  @Input('bon-f-wrap-xl')\n  public wrapXl: string;\n\n  @Input('bon-f-justify-content-xl')\n  public justifyContentXl: string;\n\n  @Input('bon-f-align-items-xl')\n  public alignItemsXl: string;\n\n  @Input('bon-f-align-content-xl')\n  public alignContentXl: string;\n\n  private currentStyles: FlexContainerStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      display: this.getValue([this.displayXl, this.displayLg, this.displayMd, this.displaySm, this.display]),\n      flexDirection: this.getValue([this.directionXl, this.directionLg, this.directionMd, this.directionSm, this.direction]),\n      flexWrap: this.getValue([this.wrapXl, this.wrapLg, this.wrapMd, this.wrapSm, this.wrap]),\n      justifyContent: this.getValue([this.justifyContentXl, this.justifyContentLg,\n        this.justifyContentMd, this.justifyContentSm, this.justifyContent]),\n      alignItems: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignItems]),\n      alignContent: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignContent])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.display !== newStyles.display ||\n      this.currentStyles.flexDirection !== newStyles.flexDirection ||\n      this.currentStyles.flexWrap !== newStyles.flexWrap ||\n      this.currentStyles.justifyContent !== newStyles.justifyContent ||\n      this.currentStyles.alignItems !== newStyles.alignItems ||\n      this.currentStyles.alignContent !== newStyles.alignContent) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['display', 'flex-direction', 'flex-wrap', 'justify-content', 'align-items', 'align-content'];\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface FlexItemStyleProps {\n  flexOrder: string;\n  flexGrow: string;\n  flexShrink: string;\n  flexBasis: string;\n  alignSelf: string;\n}\n\n@Directive({\n  selector: '[bon-fi]'\n})\nexport class BoneFlexItem extends BoneBase {\n\n  @Input('bon-fi-order')\n  public order: number;\n\n  @Input('bon-fi-grow')\n  public grow: number;\n\n  @Input('bon-fi-shrink')\n  public shrink: number;\n\n  @Input('bon-fi-basis')\n  public basis: number | string;\n\n  @Input('bon-fi-align')\n  public align: string;\n\n  @Input('bon-fi-order-sm')\n  public orderSm: number;\n\n  @Input('bon-fi-grow-sm')\n  public growSm: number;\n\n  @Input('bon-fi-shrink-sm')\n  public shrinkSm: number;\n\n  @Input('bon-fi-basis-sm')\n  public basisSm: number | string;\n\n  @Input('bon-fi-align-sm')\n  public alignSm: string;\n\n  @Input('bon-fi-order-md')\n  public orderMd: number;\n\n  @Input('bon-fi-grow-md')\n  public growMd: number;\n\n  @Input('bon-fi-shrink-md')\n  public shrinkMd: number;\n\n  @Input('bon-fi-basis-md')\n  public basisMd: number | string;\n\n  @Input('bon-fi-align-md')\n  public alignMd: string;\n\n  @Input('bon-fi-order-lg')\n  public orderLg: number;\n\n  @Input('bon-fi-grow-lg')\n  public growLg: number;\n\n  @Input('bon-fi-shrink-lg')\n  public shrinkLg: number;\n\n  @Input('bon-fi-basis-lg')\n  public basisLg: number | string;\n\n  @Input('bon-fi-align-lg')\n  public alignLg: string;\n\n  @Input('bon-fi-order-xl')\n  public orderXl: number;\n\n  @Input('bon-fi-grow-xl')\n  public growXl: number;\n\n  @Input('bon-fi-shrink-xl')\n  public shrinkXl: number;\n\n  @Input('bon-fi-basis-xl')\n  public basisXl: number | string;\n\n  @Input('bon-fi-align-xl')\n  public alignXl: string;\n\n  private currentStyles: FlexItemStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      flexOrder: this.getValue([this.orderXl, this.orderLg, this.orderMd, this.orderSm, this.order]),\n      flexGrow: this.getValue([this.growXl, this.growLg, this.growMd, this.growSm, this.grow]),\n      flexShrink: this.getValue([this.shrinkXl, this.shrinkLg, this.shrinkMd, this.shrinkSm, this.shrink]),\n      flexBasis: this.getValue([this.basisXl, this.basisLg, this.basisMd, this.basisSm, this.basis]),\n      alignSelf: this.getValue([this.alignXl, this.alignLg, this.alignMd, this.alignSm, this.align])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.flexOrder !== newStyles.flexOrder ||\n      this.currentStyles.flexShrink !== newStyles.flexShrink ||\n      this.currentStyles.flexBasis !== newStyles.flexBasis ||\n      this.currentStyles.alignSelf !== newStyles.alignSelf) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['order', 'grow', 'shrink', 'basis', 'align'];\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface GridContainerStyleProps {\n  display: string;\n  gridTemplateColumns: string;\n  gridTemplateRows: string;\n  gridTemplateAreas: string;\n  gridAutoColumns: string;\n  gridAutoRows: string;\n  gridGap: string;\n  justifyItems: string;\n  alignItems: string;\n  justifyContent: string;\n  alignContent: string;\n}\n\n@Directive({\n  selector: '[bon-g]'\n})\nexport class BoneGrid extends BoneBase {\n\n  private _display = 'grid';\n\n  @Input('bon-g')\n  public get display(): string {\n    return this._display;\n  }\n\n  public set display(display: string) {\n    this._display = display || 'grid';\n  }\n\n  @Input('bon-g-cols')\n  public cols: number | Array<number | string> | string;\n\n  @Input('bon-g-rows')\n  public rows: number | Array<number | string> | string;\n\n  @Input('bon-g-area')\n  public area: Array<Array<string>> | string;\n\n  @Input('bon-g-auto-cols')\n  public autoCols: number | string;\n\n  @Input('bon-g-auto-rows')\n  public autoRows: number | string;\n\n  @Input('bon-g-auto-flow')\n  public autoFlow: string;\n\n  @Input('bon-g-gap')\n  public gridGap: number | Array<number | string> | string;\n\n  @Input('bon-g-justify-items')\n  public justifyItems: string;\n\n  @Input('bon-g-align-items')\n  public alignItems: string;\n\n  @Input('bon-g-justify-content')\n  public justifyContent: string;\n\n  @Input('bon-g-align-content')\n  public alignContent: string;\n\n  private _displaySm = 'grid';\n\n  @Input('bon-g-sm')\n  public get displaySm(): string {\n    return this._displaySm;\n  }\n\n  public set displaySm(display: string) {\n    this._displaySm = display || 'grid';\n  }\n\n  @Input('bon-g-cols-sm')\n  public colsSm: number | Array<number | string> | string;\n\n  @Input('bon-g-rows-sm')\n  public rowsSm: number | Array<number | string> | string;\n\n  @Input('bon-g-area-sm')\n  public areaSm: Array<Array<string>> | string;\n\n  @Input('bon-g-auto-cols-sm')\n  public autoColsSm: number | string;\n\n  @Input('bon-g-auto-rows-sm')\n  public autoRowsSm: number | string;\n\n  @Input('bon-g-auto-flow-sm')\n  public autoFlowSm: string;\n\n  @Input('bon-g-gap-sm')\n  public gridGapSm: number | Array<number | string> | string;\n\n  @Input('bon-g-justify-items-sm')\n  public justifyItemsSm: string;\n\n  @Input('bon-g-align-items-sm')\n  public alignItemsSm: string;\n\n  @Input('bon-g-justify-content-sm')\n  public justifyContentSm: string;\n\n  @Input('bon-g-align-content-sm')\n  public alignContentSm: string;\n\n  private _displayMd = 'grid';\n\n  @Input('bon-g-md')\n  public get displayMd(): string {\n    return this._displayMd;\n  }\n\n  public set displayMd(display: string) {\n    this._displayMd = display || 'grid';\n  }\n\n  @Input('bon-g-cols-md')\n  public colsMd: number | Array<number | string> | string;\n\n  @Input('bon-g-rows-md')\n  public rowsMd: number | Array<number | string> | string;\n\n  @Input('bon-g-area-md')\n  public areaMd: Array<Array<string>> | string;\n\n  @Input('bon-g-auto-cols-md')\n  public autoColsMd: number | string;\n\n  @Input('bon-g-auto-rows-md')\n  public autoRowsMd: number | string;\n\n  @Input('bon-g-auto-flow-md')\n  public autoFlowMd: string;\n\n  @Input('bon-g-gap-md')\n  public gridGapMd: number | Array<number | string> | string;\n\n  @Input('bon-g-justify-items-md')\n  public justifyItemsMd: string;\n\n  @Input('bon-g-align-items-md')\n  public alignItemsMd: string;\n\n  @Input('bon-g-justify-content-md')\n  public justifyContentMd: string;\n\n  @Input('bon-g-align-content-md')\n  public alignContentMd: string;\n\n  private _displayLg = 'grid';\n\n  @Input('bon-g-lg')\n  public get displayLg(): string {\n    return this._displayLg;\n  }\n\n  public set displayLg(display: string) {\n    this._displayLg = display || 'grid';\n  }\n\n  @Input('bon-g-cols-lg')\n  public colsLg: number | Array<number | string> | string;\n\n  @Input('bon-g-rows-lg')\n  public rowsLg: number | Array<number | string> | string;\n\n  @Input('bon-g-area-lg')\n  public areaLg: Array<Array<string>> | string;\n\n  @Input('bon-g-auto-cols-lg')\n  public autoColsLg: number | string;\n\n  @Input('bon-g-auto-rows-lg')\n  public autoRowsLg: number | string;\n\n  @Input('bon-g-auto-flow-lg')\n  public autoFlowLg: string;\n\n  @Input('bon-g-gap-lg')\n  public gridGapLg: number | Array<number | string> | string;\n\n  @Input('bon-g-justify-items-lg')\n  public justifyItemsLg: string;\n\n  @Input('bon-g-align-items-lg')\n  public alignItemsLg: string;\n\n  @Input('bon-g-justify-content-lg')\n  public justifyContentLg: string;\n\n  @Input('bon-g-align-content-lg')\n  public alignContentLg: string;\n\n  private _displayXl = 'grid';\n\n  @Input('bon-g-xl')\n  public get displayXl(): string {\n    return this._displayXl;\n  }\n\n  public set displayXl(display: string) {\n    this._displayXl = display || 'grid';\n  }\n\n  @Input('bon-g-cols-xl')\n  public colsXl: number | Array<number | string> | string;\n\n  @Input('bon-g-rows-xl')\n  public rowsXl: number | Array<number | string> | string;\n\n  @Input('bon-g-area-xl')\n  public areaXl: Array<Array<string>> | string;\n\n  @Input('bon-g-auto-cols-xl')\n  public autoColsXl: number | string;\n\n  @Input('bon-g-auto-rows-xl')\n  public autoRowsXl: number | string;\n\n  @Input('bon-g-auto-flow-xl')\n  public autoFlowXl: string;\n\n  @Input('bon-g-gap-xl')\n  public gridGapXl: number | Array<number | string> | string;\n\n  @Input('bon-g-justify-items-xl')\n  public justifyItemsXl: string;\n\n  @Input('bon-g-align-items-xl')\n  public alignItemsXl: string;\n\n  @Input('bon-g-justify-content-xl')\n  public justifyContentXl: string;\n\n  @Input('bon-g-align-content-xl')\n  public alignContentXl: string;\n\n  private currentStyles: GridContainerStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      display: this.getValue([this.displayXl, this.displayLg, this.displayMd, this.displaySm, this.display]),\n      gridTemplateColumns: this.getCols(),\n      gridTemplateRows: this.getRows(),\n      gridTemplateAreas: this.getAreas(),\n      gridAutoColumns: this.getAutoCols(),\n      gridAutoRows: this.getAutoRows(),\n      gridGap: this.getGap(),\n      justifyItems: this.getValue([this.justifyItemsXl, this.justifyItemsLg, this.justifyItemsMd, this.justifyItemsSm, this.justifyItems]),\n      alignItems: this.getValue([this.alignItemsXl, this.alignItemsLg, this.alignItemsMd, this.alignItemsSm, this.alignItems]),\n      justifyContent: this.getValue([this.justifyContentXl, this.justifyContentLg, this.justifyContentMd,\n        this.justifyContentSm, this.justifyContent]),\n      alignContent: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignContent])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.display !== newStyles.display ||\n      this.currentStyles.gridTemplateColumns !== newStyles.gridTemplateColumns ||\n      this.currentStyles.gridTemplateRows !== newStyles.gridTemplateRows ||\n      this.currentStyles.gridTemplateAreas !== newStyles.gridTemplateAreas ||\n      this.currentStyles.gridAutoColumns !== newStyles.gridAutoColumns ||\n      this.currentStyles.gridAutoRows !== newStyles.gridAutoRows ||\n      this.currentStyles.gridGap !== newStyles.gridGap ||\n      this.currentStyles.justifyItems !== newStyles.justifyItems ||\n      this.currentStyles.alignItems !== newStyles.alignItems ||\n      this.currentStyles.justifyContent !== newStyles.justifyContent ||\n      this.currentStyles.alignContent !== newStyles.alignContent\n    ) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return [\n      'display',\n      'grid-template-columns',\n      'grid-template-rows',\n      'grid-template-areas',\n      'grid-auto-columns',\n      'grid-auto-rows',\n      'grid-gap',\n      'justify-items',\n      'align-items',\n      'justify-content',\n      'align-content'\n    ];\n  }\n\n  private getCols(): string {\n    const cols = this.getValue([this.colsXl, this.colsLg, this.colsMd, this.colsSm, this.cols]);\n    return this.getTracks(cols);\n  }\n\n  private getRows(): string {\n    const rows = this.getValue([this.rowsXl, this.rowsLg, this.rowsMd, this.rowsSm, this.rows]);\n    return this.getTracks(rows);\n  }\n\n  private getTracks(tracks: number | Array<number | string> | string): string {\n    if (this.isNumeric(<number | string>tracks)) {\n      return `repeat(${tracks}, 1fr)`;\n    } else if (Array.isArray(tracks)) {\n      return tracks.map(track => typeof track === 'number' ? `${track}px` : track).join(' ');\n    }\n\n    return <string>tracks;\n  }\n\n  private getAutoCols(): string {\n    const colDefaultSize = this.getValue([this.autoColsXl, this.autoColsLg, this.autoColsMd, this.autoColsSm, this.autoCols]);\n    return this.getTrackDefaultSize(colDefaultSize);\n  }\n\n  private getAutoRows(): string {\n    const rowDefaultSize = this.getValue([this.autoRowsXl, this.autoRowsLg, this.autoRowsMd, this.autoColsSm, this.autoRows]);\n    return this.getTrackDefaultSize(rowDefaultSize);\n  }\n\n  private getTrackDefaultSize(size: number | string): string {\n    return this.isNumeric(size) ? `${size}px` : <string>size;\n  }\n\n  private getAreas(): string {\n    const area = this.getValue([this.areaXl, this.areaLg, this.areaMd, this.areaSm, this.area]);\n\n    if (Array.isArray(area)) {\n      return area.map(row => row.join(' ')).reduce((areaStr, row, index) => `${index === 0 ? `'${areaStr}'` : areaStr} '${row}'`);\n    }\n\n    return <string>area;\n  }\n\n  private getGap(): string {\n    const gridGap = this.getValue([this.gridGapXl, this.gridGapLg, this.gridGapMd, this.gridGapSm, this.gridGap]);\n\n    if (this.isNumeric(gridGap)) {\n      return `${gridGap}px`;\n    } else if (Array.isArray(gridGap)) {\n      return gridGap.map(g => typeof g === 'number' ? `${g}px` : g).join(' ');\n    } else {\n      return gridGap;\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface GridItemStyleProps {\n  justifySelf: string;\n  alignSelf: string;\n  gridArea?: string;\n  gridColumn?: string;\n  gridRow?: string;\n}\n\n@Directive({\n  selector: '[bon-gi]'\n})\nexport class BoneGridItem extends BoneBase {\n\n  @Input('bon-gi-col')\n  public col: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-row')\n  public row: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-area')\n  public area: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-gi-justify')\n  public justify: string;\n\n  @Input('bon-gi-align')\n  public align: string;\n\n  @Input('bon-gi-col-sm')\n  public colSm: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-row-sm')\n  public rowSm: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-area-sm')\n  public areaSm: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-gi-justify-sm')\n  public justifySm: string;\n\n  @Input('bon-gi-align-sm')\n  public alignSm: string;\n\n  @Input('bon-gi-col-md')\n  public colMd: string;\n\n  @Input('bon-gi-row-md')\n  public rowMd: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-area-md')\n  public areaMd: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-gi-justify-md')\n  public justifyMd: string;\n\n  @Input('bon-gi-align-md')\n  public alignMd: string;\n\n  @Input('bon-gi-col-lg')\n  public colLg: string;\n\n  @Input('bon-gi-row-lg')\n  public rowLg: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-area-lg')\n  public areaLg: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-gi-justify-lg')\n  public justifyLg: string;\n\n  @Input('bon-gi-align-lg')\n  public alignLg: string;\n\n  @Input('bon-gi-col-xl')\n  public colXl: string;\n\n  @Input('bon-gi-row-xl')\n  public rowXl: number | [number | string, number | string] | string;\n\n  @Input('bon-gi-area-xl')\n  public areaXl: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-gi-justify-xl')\n  public justifyXl: string;\n\n  @Input('bon-gi-align-xl')\n  public alignXl: string;\n\n  private currentStyles: GridItemStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles: GridItemStyleProps = {\n      justifySelf: this.getValue([this.justifyXl, this.justifyLg, this.justifyMd, this.justifySm, this.justify]),\n      alignSelf: this.getValue([this.alignXl, this.alignLg, this.alignMd, this.alignSm, this.align]),\n      gridArea: this.getAreaInfo(),\n      gridColumn: this.getCol(),\n      gridRow: this.getRow()\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.justifySelf !== newStyles.justifySelf ||\n      this.currentStyles.alignSelf !== newStyles.alignSelf ||\n      this.currentStyles.gridArea !== newStyles.gridArea ||\n      this.currentStyles.gridColumn !== newStyles.gridColumn ||\n      this.currentStyles.gridRow !== newStyles.gridRow) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['grid-column', 'grid-row', 'grid-area', 'justify-self', 'align-self'];\n  }\n\n  private getCol(): string {\n    const col = this.getValue([this.colXl, this.colLg, this.colMd, this.colSm, this.col]);\n    return this.getTrackInfo(col);\n  }\n\n  private getRow(): string {\n    const row = this.getValue([this.rowXl, this.rowLg, this.rowMd, this.rowSm, this.row]);\n    return this.getTrackInfo(row);\n  }\n\n  private getTrackInfo(track: number | [number | string, number | string] | string): string {\n    if (this.isNumeric(<number>track)) {\n      return `span ${track}`;\n    } else if (Array.isArray(track)) {\n      return `${track[0]} / ${track[1]}`;\n    }\n\n    return <string>track || '';\n  }\n\n  private getAreaInfo(): string {\n    const area = this.getValue([this.areaXl, this.areaLg, this.areaMd, this.areaSm, this.area]);\n\n    if (Array.isArray(area)) {\n      return `${area[0] / area[1] / area[2] / area[3]}`;\n    }\n\n    return area;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BoneFlex } from './bone.flex';\nimport { BoneFlexItem } from './bone.flexitem';\nimport { BoneGrid } from './bone.grid';\nimport { BoneGridItem } from './bone.griditem';\nimport { MediaSizeWatcher } from './watcher';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    BoneFlex,\n    BoneFlexItem,\n    BoneGrid,\n    BoneGridItem\n  ],\n  providers: [\n    MediaSizeWatcher\n  ],\n  exports: [\n    BoneFlex,\n    BoneFlexItem,\n    BoneGrid,\n    BoneGridItem\n  ]\n})\nexport class BoneModule {\n}\n","export enum Breakpoint {\n  ExtraSmall = 'xs',\n  Small = 'sm',\n  Medium = 'md',\n  Large = 'lg',\n  ExtraLarge = 'xl'\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { Breakpoint } from './breakpoint';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSizeWatcher {\n\n  private currentMediaSize: Breakpoint;\n\n  private subscribers: Array<(MediaQueryList) => void> = [];\n\n  // https://getbootstrap.com/docs/4.0/layout/grid/#responsive-classes\n  private mediaSizeQueryMap: Map<Breakpoint, MediaQueryList> = new Map<Breakpoint, MediaQueryList>([\n    [Breakpoint.ExtraLarge, window.matchMedia('(min-width: 1200px)')],\n    [Breakpoint.Large, window.matchMedia('(min-width: 992px)')],\n    [Breakpoint.Medium, window.matchMedia('(min-width: 768px)')],\n    [Breakpoint.Small, window.matchMedia('(min-width: 576px)')],\n    [Breakpoint.ExtraSmall, window.matchMedia('(min-width: 0)')]\n  ]);\n\n  constructor(@Inject(NgZone) private ngZone: NgZone) {\n    this.listen = this.listen.bind(this);\n    this.mediaSizeQueryMap.forEach((value:MediaQueryList) => value.addListener(this.listen));\n    this.listen();\n  }\n\n  public getCurrentMedia(): Breakpoint {\n    return this.currentMediaSize;\n  }\n\n  public watch(subscriber: (MediaQueryList) => void): () => void {\n    this.subscribers.push(subscriber);\n    return () => this.subscribers.splice(this.subscribers.length - 1, 1);\n  }\n\n  private listen(): void {\n    for(let mediaSizeQuery of this.mediaSizeQueryMap) {\n      const [mediaSize, query] = mediaSizeQuery;\n\n      if (query.matches) {\n        if (mediaSize !== this.currentMediaSize) {\n          this.currentMediaSize = mediaSize;\n          this.alertSubscribers();\n        }\n\n        break;\n      }\n    }\n  }\n\n  private alertSubscribers(): void {\n    this.ngZone.run(() => {\n      this.subscribers.forEach(subscriber => subscriber(this.currentMediaSize));\n    });\n  }\n}\n"],"sourceRoot":""}