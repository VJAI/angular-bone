{"version":3,"sources":["webpack:///./demo/$_lazy_route_resource lazy namespace object","webpack:///./demo/demo.html","webpack:///./demo/demo.scss","webpack:///./demo/demo.ts","webpack:///./demo/main.ts","webpack:///./lib/base.ts","webpack:///./lib/bone.flex.ts","webpack:///./lib/bone.flexitem.ts","webpack:///./lib/bone.grid.ts","webpack:///./lib/bone.griditem.ts","webpack:///./lib/bone.ts","webpack:///./lib/breakpoint.ts","webpack:///./lib/watcher.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./demo/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\"\\n     bon-grid\\n     bon-grid-cols=\\\"1\\\"\\n     bon-grid-cols-md=\\\"25% 1fr\\\"\\n     bon-grid-rows=\\\"12.5rem auto 1fr\\\"\\n     bon-grid-rows-md=\\\"12.5rem 1fr\\\"\\n     bon-grid-area=\\\"'h' 'a' 'm'\\\"\\n     bon-grid-area-md=\\\"'h h' 'a m'\\\">\\n\\n  <header bon-grid-item bon-grid-item-area=\\\"h\\\">\\n    <div bon-flex bon-flex-align-items=\\\"center\\\">\\n      <div bon-flex-item bon-flex-item-grow=\\\"1\\\">\\n        <h1 class=\\\"logo\\\">angular<img src=\\\"assets/bone.png\\\" />bone</h1>\\n        <p>Provides structure to your angular apps using CSS3 Grid and Flex</p>\\n      </div>\\n      <a class=\\\"github\\\" bon-flex-item bon-flex-item-align=\\\"flex-start\\\" target=\\\"_blank\\\" href=\\\"https://github.com/vjai/angular-bone\\\">GITHUB</a>\\n    </div>\\n  </header>\\n\\n  <aside #aside [class.sticky]=\\\"isSticky\\\" bon-grid-item bon-grid-item-area=\\\"a\\\">\\n    <nav>\\n      <h4>Table of Contents</h4>\\n\\n      <ul>\\n        <li><a href=\\\"#intro\\\">Introduction</a></li>\\n        <li><a href=\\\"#simple-flex\\\">Simple flex layout</a></li>\\n        <li><a href=\\\"#\\\">Simple grid layout</a></li>\\n        <li><a href=\\\"#\\\">Responsive flex layout</a></li>\\n        <li><a href=\\\"#\\\">Responsive grid layout</a></li>\\n        <li><a href=\\\"#\\\">Mixing grid and flex</a></li>\\n        <li><a href=\\\"#\\\">Real world example</a></li>\\n        <li><a href=\\\"#\\\">API</a></li>\\n      </ul>\\n    </nav>\\n  </aside>\\n\\n  <main bon-grid-item bon-grid-item-area=\\\"m\\\">\\n    <h1>angular-bone</h1>\\n\\n    <h2 id=\\\"intro\\\">Introduction</h2>\\n\\n    <p>\\n      <a href=\\\"#\\\">angular-bone</a> helps to build page layouts using CSS3 Grid and Flex concepts for your angular apps. It\\n      provides you a set of directives that helps to build responsive layouts in a declarative way.\\n    </p>\\n\\n    <h2>Simple flex layout</h2>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-flex</strong>&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"2\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview</h4>\\n\\n    <div id=\\\"simple-flex-example\\\" class=\\\"canvas\\\" bon-flex>\\n      <div class=\\\"green\\\" bon-flex-item bon-flex-item-grow=\\\"1\\\"></div>\\n      <div class=\\\"yellow\\\" bon-flex-item bon-flex-item-grow=\\\"1\\\"></div>\\n      <div class=\\\"pink\\\" bon-flex-item bon-flex-item-grow=\\\"2\\\"></div>\\n    </div>\\n\\n    <h2>Simple grid layout</h2>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div id=\\\"simple-grid-example\\\" class=\\\"canvas\\\"\\n      <strong>bon-grid bon-grid-cols=\\\"30% 1fr\\\"\\n      bon-grid-rows=\\\"20% 1fr 10%\\\"\\n      bon-grid-area=\\\"'a a' 'b c' 'd d'\\\"</strong>&gt;\\n\\n  &lt;div class=\\\"purple\\\" <strong>bon-grid-item bon-grid-item-area=\\\"a\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-grid-item bon-grid-item-area=\\\"b\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-grid-item bon-grid-item-area=\\\"c\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-grid-item bon-grid-item-area=\\\"d\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview</h4>\\n\\n    <div id=\\\"simple-grid-example\\\" class=\\\"canvas\\\" bon-grid bon-grid-cols=\\\"30% 1fr\\\" bon-grid-rows=\\\"20% 1fr 10%\\\" bon-grid-area=\\\"'a a' 'b c' 'd d'\\\">\\n      <div class=\\\"purple\\\" bon-grid-item bon-grid-item-area=\\\"a\\\"></div>\\n      <div class=\\\"yellow\\\" bon-grid-item bon-grid-item-area=\\\"b\\\"></div>\\n      <div class=\\\"green\\\" bon-grid-item bon-grid-item-area=\\\"c\\\"></div>\\n      <div class=\\\"pink\\\" bon-grid-item bon-grid-item-area=\\\"d\\\"></div>\\n    </div>\\n\\n    <h2>Responsive flex layout</h2>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div <strong>bon-flex bon-flex-direction-md=\\\"column\\\" bon-flex-direction-md=\\\"row\\\"</strong>&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"1\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-flex-item bon-flex-item-grow=\\\"1\\\" bon-flex-item-grow-md=\\\"2\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview (Resize the window to see the changes)</h4>\\n\\n    <div id=\\\"responsive-flex-example\\\" class=\\\"canvas\\\" bon-flex bon-flex-direction=\\\"column\\\" bon-flex-direction-md=\\\"row\\\">\\n      <div class=\\\"green\\\" bon-flex-item bon-flex-item-grow=\\\"1\\\"></div>\\n      <div class=\\\"yellow\\\" bon-flex-item bon-flex-item-grow=\\\"1\\\"></div>\\n      <div class=\\\"pink\\\" bon-flex-item bon-flex-item-grow=\\\"1\\\" bon-flex-item-grow-md=\\\"2\\\"></div>\\n    </div>\\n\\n    <h2>Responsive grid layout</h2>\\n\\n    <h4>Code</h4>\\n\\n    <pre>\\n&lt;div id=\\\"simple-grid-example\\\" class=\\\"canvas\\\"\\n      <strong>bon-grid bon-grid-cols=\\\"1\\\"\\n      bon-grid-cols-md=\\\"30% 1fr\\\"\\n      bon-grid-rows=\\\"20% 30% 1fr 10%\\\"\\n      bon-grid-rows-md=\\\"20% 1fr 10%\\\"\\n      bon-grid-area=\\\"'a' 'b' 'c' 'd'\\\"\\n      bon-grid-area-md=\\\"'a a' 'b c' 'd d'\\\"</strong>&gt;\\n\\n  &lt;div class=\\\"purple\\\" <strong>bon-grid-item bon-grid-item-area=\\\"a\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"yellow\\\" <strong>bon-grid-item bon-grid-item-area=\\\"b\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"green\\\" <strong>bon-grid-item bon-grid-item-area=\\\"c\\\"</strong>&gt;&lt;/div&gt;\\n  &lt;div class=\\\"pink\\\" <strong>bon-grid-item bon-grid-item-area=\\\"d\\\"</strong>&gt;&lt;/div&gt;\\n&lt;/div&gt;</pre>\\n\\n    <h4>Preview (Resize the window to see the changes)</h4>\\n\\n    <div id=\\\"responsive-grid-example\\\" class=\\\"canvas\\\"\\n         bon-grid\\n         bon-grid-cols=\\\"1\\\"\\n         bon-grid-cols-md=\\\"30% 1fr\\\"\\n         bon-grid-rows=\\\"20% 30% 1fr 10%\\\"\\n         bon-grid-rows-md=\\\"20% 1fr 10%\\\"\\n         bon-grid-area=\\\"'a' 'b' 'c' 'd'\\\"\\n         bon-grid-area-md=\\\"'a a' 'b c' 'd d'\\\">\\n      <div class=\\\"purple\\\" bon-grid-item bon-grid-item-area=\\\"a\\\"></div>\\n      <div class=\\\"yellow\\\" bon-grid-item bon-grid-item-area=\\\"b\\\"></div>\\n      <div class=\\\"green\\\" bon-grid-item bon-grid-item-area=\\\"c\\\"></div>\\n      <div class=\\\"pink\\\" bon-grid-item bon-grid-item-area=\\\"d\\\"></div>\\n    </div>\\n\\n    <h2>Mixing grid and flex</h2>\\n\\n    <p>\\n      Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\\n    </p>\\n\\n    <h2>Real world example</h2>\\n\\n    <p>\\n      Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\\n    </p>\\n\\n    <h2>API</h2>\\n\\n    <p>\\n      Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.\\n    </p>\\n  </main>\\n</div>\\n\"","module.exports = \".container {\\n  height: 100%; }\\n  .container header {\\n    background-color: #00bfff;\\n    color: #efefef;\\n    box-shadow: 0 3px 3px -3px #949a9c;\\n    text-shadow: 0 1px 0 #949a9c;\\n    z-index: 1; }\\n  .container header div {\\n      margin: 0 1rem 0 1rem; }\\n  .container header div .logo {\\n        font-size: 3.5rem;\\n        font-family: 'Fredoka One', cursive; }\\n  .container header div .logo img {\\n          position: relative;\\n          bottom: 5px;\\n          margin: 0 5px; }\\n  .container header div .github {\\n        margin-top: 1rem; }\\n  .container aside {\\n    background-color: #f2f4f4; }\\n  .container aside nav {\\n      padding-top: 20px; }\\n  .container aside nav h4 {\\n        font-size: 1.5rem;\\n        text-align: center; }\\n  .container aside nav ul {\\n        text-transform: capitalize;\\n        margin: 0;\\n        padding: 0;\\n        list-style: none;\\n        font-size: 1.2rem;\\n        font-weight: bold;\\n        letter-spacing: 0.5px; }\\n  .container aside nav ul li a {\\n          padding: 0.5rem 0.75rem;\\n          display: block;\\n          text-align: center;\\n          transition: all 0.25s; }\\n  .container aside nav ul li a:hover {\\n            background-color: #fff; }\\n  .container aside.sticky {\\n      position: fixed;\\n      top: 0;\\n      height: 100%;\\n      width: 25%; }\\n  .container main {\\n    padding: 2rem 4rem; }\\n  .container main h1 {\\n      border-bottom: solid 1px #eaefef; }\\n  .container main .canvas {\\n      background-color: #f2f2f2;\\n      border-radius: 5px;\\n      padding: 10px; }\\n  .container main .canvas div {\\n        margin: 5px;\\n        border-radius: 5px;\\n        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12); }\\n  .container main .green {\\n      background-color: #c7e853; }\\n  .container main .yellow {\\n      background-color: #f2ef37; }\\n  .container main .pink {\\n      background-color: #ff2873; }\\n  .container main .purple {\\n      background-color: #a07df2; }\\n  .container main #simple-flex-example, .container main #responsive-flex-example {\\n      height: 300px; }\\n  .container main #simple-grid-example, .container main #responsive-grid-example {\\n      height: 500px; }\\n  @media screen and (max-width: 575px) {\\n  .container header div .logo {\\n    font-size: 2.2rem; }\\n    .container header div .logo img {\\n      width: 20px; }\\n  .container main {\\n    padding: 2rem; } }\\n\"","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  NgModule,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport 'zone.js/dist/zone';\nimport { BoneModule } from '../lib/bone';\nimport { MediaSizeWatcher } from '../lib/watcher';\nimport { Breakpoint } from \"../lib/breakpoint\";\n\n@Component({\n  selector: 'demo-root',\n  templateUrl: './demo.html',\n  styleUrls: ['./demo.scss']\n})\nclass DemoComponent implements AfterViewInit, OnDestroy {\n\n  public title = 'angular-bone';\n\n  @ViewChild('aside')\n  public aside: ElementRef;\n\n  public isSticky: boolean;\n\n  private initialOffset: number;\n\n  private mediaWatcherUnSubscribeFunction: () => void;\n\n  private breakpoint: Breakpoint;\n\n  constructor(@Inject(MediaSizeWatcher) private watcher: MediaSizeWatcher) {\n    this.breakpoint = this.watcher.getCurrentMedia();\n    this.setAside();\n\n    this.mediaWatcherUnSubscribeFunction = this.watcher.watch((breakpoint: Breakpoint) => {\n      this.breakpoint = breakpoint;\n      this.setAside();\n    });\n  }\n\n  @HostListener('window:scroll', [])\n  setAside() {\n    if (!this.aside) {\n      return;\n    }\n\n    if (this.breakpoint == Breakpoint.Large || this.breakpoint === Breakpoint.ExtraLarge) {\n      this.isSticky = window.pageYOffset >= this.initialOffset;\n    } else {\n      this.isSticky = false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.initialOffset = this.aside.nativeElement.offsetTop;\n  }\n\n  ngOnDestroy() {\n    this.mediaWatcherUnSubscribeFunction && this.mediaWatcherUnSubscribeFunction();\n  }\n}\n\n@NgModule({\n  declarations: [\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    BoneModule\n  ],\n  bootstrap: [DemoComponent]\n})\nexport class DemoModule {\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { DemoModule } from './demo';\n\nplatformBrowserDynamic().bootstrapModule(DemoModule);\n","import { ElementRef, EventEmitter, Inject, OnChanges, OnDestroy, Output } from '@angular/core';\nimport { Breakpoint } from './breakpoint';\nimport { MediaSizeWatcher } from './watcher';\n\n/**\n * The arguments that'll be passed to handler that listens for breakpoint changes.\n */\nexport interface BreakpointChangeHandlerArgs {\n  breakpoint: Breakpoint;\n  el: ElementRef;\n  directive: any;\n}\n\nexport abstract class BoneBase implements OnChanges, OnDestroy {\n\n  /**\n   * Handler that should be invoked when there is a breakpoint change.\n   */\n  @Output('breakpoint-change')\n  public breakpointChange: EventEmitter<BreakpointChangeHandlerArgs>;\n\n  /**\n   * The current breakpoint.\n   */\n  protected breakpoint: Breakpoint;\n\n  /**\n   * The media-size-watcher unsubscribe function.\n   */\n  protected mediaWatcherUnSubscribeFunction: () => void;\n\n  protected currentAppliedStyles: any = null;\n\n  constructor(@Inject(ElementRef) protected el: ElementRef, @Inject(MediaSizeWatcher) protected watcher: MediaSizeWatcher) {\n    this.breakpoint = this.watcher.getCurrentMedia();\n    this.mediaWatcherUnSubscribeFunction = this.watcher.watch((breakpoint: Breakpoint) => {\n      this.breakpoint = breakpoint;\n      this.applyLayout();\n      this.breakpointChange && this.breakpointChange.emit({\n        breakpoint: this.breakpoint,\n        el: this.el,\n        directive: this\n      });\n    });\n  }\n\n  /**\n   * Re-apply the layout on change of props.\n   */\n  ngOnChanges() {\n    this.applyLayout();\n  }\n\n  /**\n   * Unsubscribe from watcher and remove the applied styles.\n   */\n  ngOnDestroy() {\n    this.mediaWatcherUnSubscribeFunction();\n    this.getStylePropNames().forEach(style => {\n      this.el.nativeElement.style.removeProperty(style);\n    });\n  }\n\n  /**\n   * Applies the layout style properties to the attached element.\n   */\n  public applyLayout(): void {\n    const styles = this.getStyles();\n\n    if (!styles) {\n      return;\n    }\n\n    Object.keys(styles).forEach(style => {\n      const value = styles[style];\n\n      if (value) {\n        this.el.nativeElement.style.setProperty(this.toKebab(style), value);\n      } else {\n        this.el.nativeElement.style.removeProperty(this.toCamel(style));\n      }\n    });\n  }\n\n  /**\n   * Returns the styles that should be applied to the target element.\n   */\n  public abstract getStyles(): { [key: string]: any };\n\n  /**\n   * Returns the style properties affected by the directive in kebab-cased.\n   */\n  public abstract getStylePropNames(): Array<string>;\n\n  /**\n   * Destroys the directive and removes the changes applied by it.\n   */\n  public destroy(): void {\n    this.ngOnDestroy();\n  }\n\n  public getValue(arr: Array<any>): any {\n    return arr.splice(['xl', 'lg', 'md', 'sm', 'xs'].indexOf(this.breakpoint)).find(val => val);\n  }\n\n  public isNumeric(num: number | string): boolean {\n    return !isNaN(num as number);\n  }\n\n  public toKebab(str: string): string {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  public toCamel(str: string): string {\n    return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface FlexContainerStyleProps {\n  display: string;\n  flexDirection: string;\n  flexWrap: string;\n  justifyContent: string;\n  alignItems: string;\n  alignContent: string;\n}\n\n@Directive({\n  selector: '[bon-flex]'\n})\nexport class BoneFlex extends BoneBase {\n\n  private _display = 'flex';\n\n  @Input('bon-flex')\n  public get display(): string {\n    return this._display;\n  }\n\n  public set display(display: string) {\n    this._display = display || 'flex';\n  }\n\n  @Input('bon-flex-direction')\n  public direction: string;\n\n  @Input('bon-flex-wrap')\n  public wrap: string;\n\n  @Input('bon-flex-justify-content')\n  public justifyContent: string;\n\n  @Input('bon-flex-align-items')\n  public alignItems: string;\n\n  @Input('bon-flex-align-content')\n  public alignContent: string;\n\n  private _displaySm = 'flex';\n\n  @Input('bon-flex-sm')\n  public get displaySm(): string {\n    return this._displaySm;\n  }\n\n  public set displaySm(display: string) {\n    this._displaySm = display || 'flex';\n  }\n\n  @Input('bon-flex-direction-sm')\n  public directionSm: string;\n\n  @Input('bon-flex-wrap-sm')\n  public wrapSm: string;\n\n  @Input('bon-flex-justify-content-sm')\n  public justifyContentSm: string;\n\n  @Input('bon-flex-align-items-sm')\n  public alignItemsSm: string;\n\n  @Input('bon-flex-align-content-sm')\n  public alignContentSm: string;\n\n  private _displayMd = 'flex';\n\n  @Input('bon-flex-md')\n  public get displayMd(): string {\n    return this._displayMd;\n  }\n\n  public set displayMd(display: string) {\n    this._displayMd = display || 'flex';\n  }\n\n  @Input('bon-flex-direction-md')\n  public directionMd: string;\n\n  @Input('bon-flex-wrap-md')\n  public wrapMd: string;\n\n  @Input('bon-flex-justify-content-md')\n  public justifyContentMd: string;\n\n  @Input('bon-flex-align-items-md')\n  public alignItemsMd: string;\n\n  @Input('bon-flex-align-content-md')\n  public alignContentMd: string;\n\n  private _displayLg = 'flex';\n\n  @Input('bon-flex-lg')\n  public get displayLg(): string {\n    return this._displayLg;\n  }\n\n  public set displayLg(display: string) {\n    this._displayLg = display || 'flex';\n  }\n\n  @Input('bon-flex-direction-lg')\n  public directionLg: string;\n\n  @Input('bon-flex-wrap-lg')\n  public wrapLg: string;\n\n  @Input('bon-flex-justify-content-lg')\n  public justifyContentLg: string;\n\n  @Input('bon-flex-align-items-lg')\n  public alignItemsLg: string;\n\n  @Input('bon-flex-align-content-lg')\n  public alignContentLg: string;\n\n  private _displayXl = 'flex';\n\n  @Input('bon-flex-xl')\n  public get displayXl(): string {\n    return this._displayXl;\n  }\n\n  public set displayXl(display: string) {\n    this._displayXl = display || 'flex';\n  }\n\n  @Input('bon-flex-direction-xl')\n  public directionXl: string;\n\n  @Input('bon-flex-wrap-xl')\n  public wrapXl: string;\n\n  @Input('bon-flex-justify-content-xl')\n  public justifyContentXl: string;\n\n  @Input('bon-flex-align-items-xl')\n  public alignItemsXl: string;\n\n  @Input('bon-flex-align-content-xl')\n  public alignContentXl: string;\n\n  private currentStyles: FlexContainerStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      display: this.getValue([this.displayXl, this.displayLg, this.displayMd, this.displaySm, this.display]),\n      flexDirection: this.getValue([this.directionXl, this.directionLg, this.directionMd, this.directionSm, this.direction]),\n      flexWrap: this.getValue([this.wrapXl, this.wrapLg, this.wrapMd, this.wrapSm, this.wrap]),\n      justifyContent: this.getValue([this.justifyContentXl, this.justifyContentLg,\n        this.justifyContentMd, this.justifyContentSm, this.justifyContent]),\n      alignItems: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignItems]),\n      alignContent: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignContent])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.display !== newStyles.display ||\n      this.currentStyles.flexDirection !== newStyles.flexDirection ||\n      this.currentStyles.flexWrap !== newStyles.flexWrap ||\n      this.currentStyles.justifyContent !== newStyles.justifyContent ||\n      this.currentStyles.alignItems !== newStyles.alignItems ||\n      this.currentStyles.alignContent !== newStyles.alignContent) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['display', 'flex-direction', 'flex-wrap', 'justify-content', 'align-items', 'align-content'];\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface FlexItemStyleProps {\n  flexOrder: string;\n  flexGrow: string;\n  flexShrink: string;\n  flexBasis: string;\n  alignSelf: string;\n}\n\n@Directive({\n  selector: '[bon-flex-item]'\n})\nexport class BoneFlexItem extends BoneBase {\n\n  @Input('bon-flex-item-order')\n  public order: number;\n\n  @Input('bon-flex-item-grow')\n  public grow: number;\n\n  @Input('bon-flex-item-shrink')\n  public shrink: number;\n\n  @Input('bon-flex-item-basis')\n  public basis: number | string;\n\n  @Input('bon-flex-item-align')\n  public align: string;\n\n  @Input('bon-flex-item-order-sm')\n  public orderSm: number;\n\n  @Input('bon-flex-item-grow-sm')\n  public growSm: number;\n\n  @Input('bon-flex-item-shrink-sm')\n  public shrinkSm: number;\n\n  @Input('bon-flex-item-basis-sm')\n  public basisSm: number | string;\n\n  @Input('bon-flex-item-align-sm')\n  public alignSm: string;\n\n  @Input('bon-flex-item-order-md')\n  public orderMd: number;\n\n  @Input('bon-flex-item-grow-md')\n  public growMd: number;\n\n  @Input('bon-flex-item-shrink-md')\n  public shrinkMd: number;\n\n  @Input('bon-flex-item-basis-md')\n  public basisMd: number | string;\n\n  @Input('bon-flex-item-align-md')\n  public alignMd: string;\n\n  @Input('bon-flex-item-order-lg')\n  public orderLg: number;\n\n  @Input('bon-flex-item-grow-lg')\n  public growLg: number;\n\n  @Input('bon-flex-item-shrink-lg')\n  public shrinkLg: number;\n\n  @Input('bon-flex-item-basis-lg')\n  public basisLg: number | string;\n\n  @Input('bon-flex-item-align-lg')\n  public alignLg: string;\n\n  @Input('bon-flex-item-order-xl')\n  public orderXl: number;\n\n  @Input('bon-flex-item-grow-xl')\n  public growXl: number;\n\n  @Input('bon-flex-item-shrink-xl')\n  public shrinkXl: number;\n\n  @Input('bon-flex-item-basis-xl')\n  public basisXl: number | string;\n\n  @Input('bon-flex-item-align-xl')\n  public alignXl: string;\n\n  private currentStyles: FlexItemStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      flexOrder: this.getValue([this.orderXl, this.orderLg, this.orderMd, this.orderSm, this.order]),\n      flexGrow: this.getValue([this.growXl, this.growLg, this.growMd, this.growSm, this.grow]),\n      flexShrink: this.getValue([this.shrinkXl, this.shrinkLg, this.shrinkMd, this.shrinkSm, this.shrink]),\n      flexBasis: this.getValue([this.basisXl, this.basisLg, this.basisMd, this.basisSm, this.basis]),\n      alignSelf: this.getValue([this.alignXl, this.alignLg, this.alignMd, this.alignSm, this.align])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.flexOrder !== newStyles.flexOrder ||\n      this.currentStyles.flexShrink !== newStyles.flexShrink ||\n      this.currentStyles.flexBasis !== newStyles.flexBasis ||\n      this.currentStyles.alignSelf !== newStyles.alignSelf) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['order', 'grow', 'shrink', 'basis', 'align'];\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface GridContainerStyleProps {\n  display: string;\n  gridTemplateColumns: string;\n  gridTemplateRows: string;\n  gridTemplateAreas: string;\n  gridAutoColumns: string;\n  gridAutoRows: string;\n  gridGap: string;\n  justifyItems: string;\n  alignItems: string;\n  justifyContent: string;\n  alignContent: string;\n}\n\n@Directive({\n  selector: '[bon-grid]'\n})\nexport class BoneGrid extends BoneBase {\n\n  private _display = 'grid';\n\n  @Input('bon-grid')\n  public get display(): string {\n    return this._display;\n  }\n\n  public set display(display: string) {\n    this._display = display || 'grid';\n  }\n\n  @Input('bon-grid-cols')\n  public cols: number | Array<number | string> | string;\n\n  @Input('bon-grid-rows')\n  public rows: number | Array<number | string> | string;\n\n  @Input('bon-grid-area')\n  public area: Array<Array<string>> | string;\n\n  @Input('bon-grid-auto-cols')\n  public autoCols: number | string;\n\n  @Input('bon-grid-auto-rows')\n  public autoRows: number | string;\n\n  @Input('bon-grid-auto-flow')\n  public autoFlow: string;\n\n  @Input('bon-grid-gap')\n  public gridGap: number | Array<number | string> | string;\n\n  @Input('bon-grid-justify-items')\n  public justifyItems: string;\n\n  @Input('bon-grid-align-items')\n  public alignItems: string;\n\n  @Input('bon-grid-justify-content')\n  public justifyContent: string;\n\n  @Input('bon-grid-align-content')\n  public alignContent: string;\n\n  private _displaySm = 'grid';\n\n  @Input('bon-grid-sm')\n  public get displaySm(): string {\n    return this._displaySm;\n  }\n\n  public set displaySm(display: string) {\n    this._displaySm = display || 'grid';\n  }\n\n  @Input('bon-grid-cols-sm')\n  public colsSm: number | Array<number | string> | string;\n\n  @Input('bon-grid-rows-sm')\n  public rowsSm: number | Array<number | string> | string;\n\n  @Input('bon-grid-area-sm')\n  public areaSm: Array<Array<string>> | string;\n\n  @Input('bon-grid-auto-cols-sm')\n  public autoColsSm: number | string;\n\n  @Input('bon-grid-auto-rows-sm')\n  public autoRowsSm: number | string;\n\n  @Input('bon-grid-auto-flow-sm')\n  public autoFlowSm: string;\n\n  @Input('bon-grid-gap-sm')\n  public gridGapSm: number | Array<number | string> | string;\n\n  @Input('bon-grid-justify-items-sm')\n  public justifyItemsSm: string;\n\n  @Input('bon-grid-align-items-sm')\n  public alignItemsSm: string;\n\n  @Input('bon-grid-justify-content-sm')\n  public justifyContentSm: string;\n\n  @Input('bon-grid-align-content-sm')\n  public alignContentSm: string;\n\n  private _displayMd = 'grid';\n\n  @Input('bon-grid-md')\n  public get displayMd(): string {\n    return this._displayMd;\n  }\n\n  public set displayMd(display: string) {\n    this._displayMd = display || 'grid';\n  }\n\n  @Input('bon-grid-cols-md')\n  public colsMd: number | Array<number | string> | string;\n\n  @Input('bon-grid-rows-md')\n  public rowsMd: number | Array<number | string> | string;\n\n  @Input('bon-grid-area-md')\n  public areaMd: Array<Array<string>> | string;\n\n  @Input('bon-grid-auto-cols-md')\n  public autoColsMd: number | string;\n\n  @Input('bon-grid-auto-rows-md')\n  public autoRowsMd: number | string;\n\n  @Input('bon-grid-auto-flow-md')\n  public autoFlowMd: string;\n\n  @Input('bon-grid-gap-md')\n  public gridGapMd: number | Array<number | string> | string;\n\n  @Input('bon-grid-justify-items-md')\n  public justifyItemsMd: string;\n\n  @Input('bon-grid-align-items-md')\n  public alignItemsMd: string;\n\n  @Input('bon-grid-justify-content-md')\n  public justifyContentMd: string;\n\n  @Input('bon-grid-align-content-md')\n  public alignContentMd: string;\n\n  private _displayLg = 'grid';\n\n  @Input('bon-grid-lg')\n  public get displayLg(): string {\n    return this._displayLg;\n  }\n\n  public set displayLg(display: string) {\n    this._displayLg = display || 'grid';\n  }\n\n  @Input('bon-grid-cols-lg')\n  public colsLg: number | Array<number | string> | string;\n\n  @Input('bon-grid-rows-lg')\n  public rowsLg: number | Array<number | string> | string;\n\n  @Input('bon-grid-area-lg')\n  public areaLg: Array<Array<string>> | string;\n\n  @Input('bon-grid-auto-cols-lg')\n  public autoColsLg: number | string;\n\n  @Input('bon-grid-auto-rows-lg')\n  public autoRowsLg: number | string;\n\n  @Input('bon-grid-auto-flow-lg')\n  public autoFlowLg: string;\n\n  @Input('bon-grid-gap-lg')\n  public gridGapLg: number | Array<number | string> | string;\n\n  @Input('bon-grid-justify-items-lg')\n  public justifyItemsLg: string;\n\n  @Input('bon-grid-align-items-lg')\n  public alignItemsLg: string;\n\n  @Input('bon-grid-justify-content-lg')\n  public justifyContentLg: string;\n\n  @Input('bon-grid-align-content-lg')\n  public alignContentLg: string;\n\n  private _displayXl = 'grid';\n\n  @Input('bon-grid-xl')\n  public get displayXl(): string {\n    return this._displayXl;\n  }\n\n  public set displayXl(display: string) {\n    this._displayXl = display || 'grid';\n  }\n\n  @Input('bon-grid-cols-xl')\n  public colsXl: number | Array<number | string> | string;\n\n  @Input('bon-grid-rows-xl')\n  public rowsXl: number | Array<number | string> | string;\n\n  @Input('bon-grid-area-xl')\n  public areaXl: Array<Array<string>> | string;\n\n  @Input('bon-grid-auto-cols-xl')\n  public autoColsXl: number | string;\n\n  @Input('bon-grid-auto-rows-xl')\n  public autoRowsXl: number | string;\n\n  @Input('bon-grid-auto-flow-xl')\n  public autoFlowXl: string;\n\n  @Input('bon-grid-gap-xl')\n  public gridGapXl: number | Array<number | string> | string;\n\n  @Input('bon-grid-justify-items-xl')\n  public justifyItemsXl: string;\n\n  @Input('bon-grid-align-items-xl')\n  public alignItemsXl: string;\n\n  @Input('bon-grid-justify-content-xl')\n  public justifyContentXl: string;\n\n  @Input('bon-grid-align-content-xl')\n  public alignContentXl: string;\n\n  private currentStyles: GridContainerStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles = {\n      display: this.getValue([this.displayXl, this.displayLg, this.displayMd, this.displaySm, this.display]),\n      gridTemplateColumns: this.getCols(),\n      gridTemplateRows: this.getRows(),\n      gridTemplateAreas: this.getAreas(),\n      gridAutoColumns: this.getAutoCols(),\n      gridAutoRows: this.getAutoRows(),\n      gridGap: this.getGap(),\n      justifyItems: this.getValue([this.justifyItemsXl, this.justifyItemsLg, this.justifyItemsMd, this.justifyItemsSm, this.justifyItems]),\n      alignItems: this.getValue([this.alignItemsXl, this.alignItemsLg, this.alignItemsMd, this.alignItemsSm, this.alignItems]),\n      justifyContent: this.getValue([this.justifyContentXl, this.justifyContentLg, this.justifyContentMd,\n        this.justifyContentSm, this.justifyContent]),\n      alignContent: this.getValue([this.alignContentXl, this.alignContentLg, this.alignContentMd, this.alignContentSm, this.alignContent])\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.display !== newStyles.display ||\n      this.currentStyles.gridTemplateColumns !== newStyles.gridTemplateColumns ||\n      this.currentStyles.gridTemplateRows !== newStyles.gridTemplateRows ||\n      this.currentStyles.gridTemplateAreas !== newStyles.gridTemplateAreas ||\n      this.currentStyles.gridAutoColumns !== newStyles.gridAutoColumns ||\n      this.currentStyles.gridAutoRows !== newStyles.gridAutoRows ||\n      this.currentStyles.gridGap !== newStyles.gridGap ||\n      this.currentStyles.justifyItems !== newStyles.justifyItems ||\n      this.currentStyles.alignItems !== newStyles.alignItems ||\n      this.currentStyles.justifyContent !== newStyles.justifyContent ||\n      this.currentStyles.alignContent !== newStyles.alignContent\n    ) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return [\n      'display',\n      'grid-template-columns',\n      'grid-template-rows',\n      'grid-template-areas',\n      'grid-auto-columns',\n      'grid-auto-rows',\n      'grid-gap',\n      'justify-items',\n      'align-items',\n      'justify-content',\n      'align-content'\n    ];\n  }\n\n  private getCols(): string {\n    const cols = this.getValue([this.colsXl, this.colsLg, this.colsMd, this.colsSm, this.cols]);\n    return this.getTracks(cols);\n  }\n\n  private getRows(): string {\n    const rows = this.getValue([this.rowsXl, this.rowsLg, this.rowsMd, this.rowsSm, this.rows]);\n    return this.getTracks(rows);\n  }\n\n  private getTracks(tracks: number | Array<number | string> | string): string {\n    if (this.isNumeric(<number | string>tracks)) {\n      return `repeat(${tracks}, 1fr)`;\n    } else if (Array.isArray(tracks)) {\n      return tracks.map(track => typeof track === 'number' ? `${track}px` : track).join(' ');\n    }\n\n    return <string>tracks;\n  }\n\n  private getAutoCols(): string {\n    const colDefaultSize = this.getValue([this.autoColsXl, this.autoColsLg, this.autoColsMd, this.autoColsSm, this.autoCols]);\n    return this.getTrackDefaultSize(colDefaultSize);\n  }\n\n  private getAutoRows(): string {\n    const rowDefaultSize = this.getValue([this.autoRowsXl, this.autoRowsLg, this.autoRowsMd, this.autoColsSm, this.autoRows]);\n    return this.getTrackDefaultSize(rowDefaultSize);\n  }\n\n  private getTrackDefaultSize(size: number | string): string {\n    return this.isNumeric(size) ? `${size}px` : <string>size;\n  }\n\n  private getAreas(): string {\n    const area = this.getValue([this.areaXl, this.areaLg, this.areaMd, this.areaSm, this.area]);\n\n    if (Array.isArray(area)) {\n      return area.map(row => row.join(' ')).reduce((areaStr, row, index) => `${index === 0 ? `'${areaStr}'` : areaStr} '${row}'`);\n    }\n\n    return <string>area;\n  }\n\n  private getGap(): string {\n    const gridGap = this.getValue([this.gridGapXl, this.gridGapLg, this.gridGapMd, this.gridGapSm, this.gridGap]);\n\n    if (this.isNumeric(gridGap)) {\n      return `${gridGap}px`;\n    } else if (Array.isArray(gridGap)) {\n      return gridGap.map(g => typeof g === 'number' ? `${g}px` : g).join(' ');\n    } else {\n      return gridGap;\n    }\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { BoneBase } from './base';\n\nexport interface GridItemStyleProps {\n  justifySelf: string;\n  alignSelf: string;\n  gridArea?: string;\n  gridColumn?: string;\n  gridRow?: string;\n}\n\n@Directive({\n  selector: '[bon-grid-item]'\n})\nexport class BoneGridItem extends BoneBase {\n\n  @Input('bon-grid-item-col')\n  public col: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-row')\n  public row: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-area')\n  public area: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-grid-item-justify')\n  public justify: string;\n\n  @Input('bon-grid-item-align')\n  public align: string;\n\n  @Input('bon-grid-item-col-sm')\n  public colSm: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-row-sm')\n  public rowSm: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-area-sm')\n  public areaSm: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-grid-item-justify-sm')\n  public justifySm: string;\n\n  @Input('bon-grid-item-align-sm')\n  public alignSm: string;\n\n  @Input('bon-grid-item-col-md')\n  public colMd: string;\n\n  @Input('bon-grid-item-row-md')\n  public rowMd: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-area-md')\n  public areaMd: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-grid-item-justify-md')\n  public justifyMd: string;\n\n  @Input('bon-grid-item-align-md')\n  public alignMd: string;\n\n  @Input('bon-grid-item-col-lg')\n  public colLg: string;\n\n  @Input('bon-grid-item-row-lg')\n  public rowLg: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-area-lg')\n  public areaLg: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-grid-item-justify-lg')\n  public justifyLg: string;\n\n  @Input('bon-grid-item-align-lg')\n  public alignLg: string;\n\n  @Input('bon-grid-item-col-xl')\n  public colXl: string;\n\n  @Input('bon-grid-item-row-xl')\n  public rowXl: number | [number | string, number | string] | string;\n\n  @Input('bon-grid-item-area-xl')\n  public areaXl: [number | string, number | string, number | string, number | string] | string;\n\n  @Input('bon-grid-item-justify-xl')\n  public justifyXl: string;\n\n  @Input('bon-grid-item-align-xl')\n  public alignXl: string;\n\n  private currentStyles: GridItemStyleProps = null;\n\n  public getStyles(): { [key: string]: any } {\n    const newStyles: GridItemStyleProps = {\n      justifySelf: this.getValue([this.justifyXl, this.justifyLg, this.justifyMd, this.justifySm, this.justify]),\n      alignSelf: this.getValue([this.alignXl, this.alignLg, this.alignMd, this.alignSm, this.align]),\n      gridArea: this.getAreaInfo(),\n      gridColumn: this.getCol(),\n      gridRow: this.getRow()\n    };\n\n    const hasValue = Object.values(newStyles).filter(newStyle => !!newStyle).length > 0;\n\n    if (this.currentStyles === null) {\n      this.currentStyles = hasValue ? newStyles : null;\n      return this.currentStyles;\n    } else if (this.currentStyles.justifySelf !== newStyles.justifySelf ||\n      this.currentStyles.alignSelf !== newStyles.alignSelf ||\n      this.currentStyles.gridArea !== newStyles.gridArea ||\n      this.currentStyles.gridColumn !== newStyles.gridColumn ||\n      this.currentStyles.gridRow !== newStyles.gridRow) {\n      this.currentStyles = newStyles;\n      return this.currentStyles;\n    }\n\n    return null;\n  }\n\n  public getStylePropNames(): Array<string> {\n    return ['grid-column', 'grid-row', 'grid-area', 'justify-self', 'align-self'];\n  }\n\n  private getCol(): string {\n    const col = this.getValue([this.colXl, this.colLg, this.colMd, this.colSm, this.col]);\n    return this.getTrackInfo(col);\n  }\n\n  private getRow(): string {\n    const row = this.getValue([this.rowXl, this.rowLg, this.rowMd, this.rowSm, this.row]);\n    return this.getTrackInfo(row);\n  }\n\n  private getTrackInfo(track: number | [number | string, number | string] | string): string {\n    if (this.isNumeric(<number>track)) {\n      return `span ${track}`;\n    } else if (Array.isArray(track)) {\n      return `${track[0]} / ${track[1]}`;\n    }\n\n    return <string>track || '';\n  }\n\n  private getAreaInfo(): string {\n    const area = this.getValue([this.areaXl, this.areaLg, this.areaMd, this.areaSm, this.area]);\n\n    if (Array.isArray(area)) {\n      return `${area[0] / area[1] / area[2] / area[3]}`;\n    }\n\n    return area;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BoneFlex } from './bone.flex';\nimport { BoneFlexItem } from './bone.flexitem';\nimport { BoneGrid } from './bone.grid';\nimport { BoneGridItem } from './bone.griditem';\nimport { MediaSizeWatcher } from './watcher';\n\n@NgModule({\n  imports: [],\n  declarations: [\n    BoneFlex,\n    BoneFlexItem,\n    BoneGrid,\n    BoneGridItem\n  ],\n  providers: [\n    MediaSizeWatcher\n  ],\n  exports: [\n    BoneFlex,\n    BoneFlexItem,\n    BoneGrid,\n    BoneGridItem\n  ]\n})\nexport class BoneModule {\n}\n","export enum Breakpoint {\n  ExtraSmall = 'xs',\n  Small = 'sm',\n  Medium = 'md',\n  Large = 'lg',\n  ExtraLarge = 'xl'\n}\n","import { Injectable } from '@angular/core';\nimport { Breakpoint } from './breakpoint';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaSizeWatcher {\n\n  private currentMediaSize: Breakpoint;\n\n  private subscribers: Array<(MediaQueryList) => void> = [];\n\n  // https://getbootstrap.com/docs/4.0/layout/grid/#responsive-classes\n  private mediaSizeQueryMap: Map<Breakpoint, MediaQueryList> = new Map<Breakpoint, MediaQueryList>([\n    [Breakpoint.ExtraLarge, window.matchMedia('(min-width: 1200px)')],\n    [Breakpoint.Large, window.matchMedia('(min-width: 992px)')],\n    [Breakpoint.Medium, window.matchMedia('(min-width: 768px)')],\n    [Breakpoint.Small, window.matchMedia('(min-width: 576px)')],\n    [Breakpoint.ExtraSmall, window.matchMedia('(min-width: 0)')]\n  ]);\n\n  constructor() {\n    this.listen = this.listen.bind(this);\n    this.mediaSizeQueryMap.forEach((value:MediaQueryList) => value.addListener(this.listen));\n    this.listen();\n  }\n\n  public getCurrentMedia(): Breakpoint {\n    return this.currentMediaSize;\n  }\n\n  public watch(subscriber: (MediaQueryList) => void): () => void {\n    this.subscribers.push(subscriber);\n    return () => this.subscribers.splice(this.subscribers.length - 1, 1);\n  }\n\n  private listen(): void {\n    for(let mediaSizeQuery of this.mediaSizeQueryMap) {\n      const [mediaSize, query] = mediaSizeQuery;\n\n      if (query.matches) {\n        if (mediaSize !== this.currentMediaSize) {\n          this.currentMediaSize = mediaSize;\n          this.alertSubscribers();\n        }\n\n        break;\n      }\n    }\n  }\n\n  private alertSubscribers(): void {\n    this.subscribers.forEach(subscriber => subscriber(this.currentMediaSize));\n  }\n}\n"],"sourceRoot":""}